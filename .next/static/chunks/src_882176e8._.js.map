{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createSession, deleteSession, getUser } from '@/lib/auth';\nimport {\n  addLeaveRequest,\n  getLeaveRequests,\n  updateLeaveRequestStatus,\n  updateAttendanceStatus as dbUpdateAttendanceStatus,\n  addGoal,\n  updateGoalStatus as dbUpdateGoalStatus,\n  getLeaveRequestById,\n  deleteGoal as dbDeleteGoal,\n} from '@/lib/mock-data';\nimport { USERS } from '@/lib/data/users';\nimport { generateInsightReport } from '@/ai/flows/generate-insight-report';\nimport type { LeaveRequest, AttendanceStatus, GoalStatus } from './types';\nimport { format } from 'date-fns';\n\n// --- Auth Actions ---\n\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(1, 'Password is required'),\n});\n\ntype LoginState = {\n  error?: string;\n  success?: boolean;\n  redirectTo?: string;\n};\n\nexport async function login(formData: FormData): Promise<LoginState> {\n  const result = loginSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!result.success) {\n    return { error: result.error.errors.map((e) => e.message).join(', ') };\n  }\n\n  const { email, password } = result.data;\n\n  const user = USERS.find((u) => u.email === email);\n\n  const MOCK_PASSWORDS: Record<string, string> = {\n    'sehajdeep@unicube.com': 'admin123',\n    'naitik@unicube.com': 'user123',\n    'arjun@unicube.com': 'user123',\n  }\n\n  if (!user || MOCK_PASSWORDS[user.email] !== password) {\n    return { error: 'Invalid email or password' };\n  }\n\n  await createSession(user.id);\n  \n  if (user.role === 'admin') {\n    return { success: true, redirectTo: '/dashboard'};\n  } else {\n    return { success: true, redirectTo: '/my-requests'};\n  }\n}\n\nexport async function logout() {\n  await deleteSession();\n  redirect('/');\n}\n\n// --- Leave Request Actions ---\n\nconst leaveRequestSchema = z.object({\n  startDate: z.string().min(1, 'Start date is required.'),\n  endDate: z.string().min(1, 'End date is required.'),\n  reason: z.string().min(10, 'Reason must be at least 10 characters long.').max(200, 'Reason cannot exceed 200 characters.'),\n});\n\ntype LeaveRequestState = {\n  message?: string;\n  error?: string;\n  success?: boolean;\n};\n\nexport async function submitLeaveRequest(formData: FormData): Promise<LeaveRequestState> {\n  const user = await getUser();\n  if (!user) {\n    return { error: 'You must be logged in to submit a request.' };\n  }\n\n  const result = leaveRequestSchema.safeParse({\n    startDate: formData.get('startDate'),\n    endDate: formData.get('endDate'),\n    reason: formData.get('reason'),\n  });\n\n  if (!result.success) {\n    return { error: result.error.flatten().fieldErrors.reason?.[0] || 'Invalid data provided.' };\n  }\n\n  const { startDate, endDate, reason } = result.data;\n\n  if (startDate > endDate) {\n    return { error: 'Start date cannot be after the end date.' };\n  }\n\n  try {\n    await addLeaveRequest({\n      userId: user.id,\n      userName: user.name,\n      userAvatarUrl: user.avatarUrl,\n      startDate,\n      endDate,\n      reason,\n      status: 'pending',\n    });\n\n    revalidatePath('/my-requests');\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Leave request submitted successfully!' };\n  } catch (e) {\n    return { error: 'Failed to submit leave request.' };\n  }\n}\n\nexport async function updateLeaveStatus(leaveId: string, status: 'approved' | 'rejected') {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    throw new Error('Unauthorized');\n  }\n\n  const leaveRequest = await getLeaveRequestById(leaveId);\n  if (!leaveRequest) {\n    throw new Error('Leave request not found');\n  }\n\n  await updateLeaveRequestStatus(leaveId, status);\n  \n  if (status === 'approved') {\n    // Also update attendance records to 'on_leave' for the duration\n    for (let d = new Date(leaveRequest.startDate); d <= new Date(leaveRequest.endDate); d.setDate(d.getDate() + 1)) {\n        await dbUpdateAttendanceStatus(leaveRequest.userId, format(d, 'yyyy-MM-dd'), 'on_leave');\n    }\n  }\n\n  revalidatePath('/dashboard');\n  revalidatePath('/attendance');\n  revalidatePath('/my-requests');\n}\n\n// --- Attendance Actions ---\n\ntype AttendanceState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function updateAttendanceAction(userId: string, date: string, status: AttendanceStatus): Promise<AttendanceState> {\n    const adminUser = await getUser();\n    if (!adminUser || adminUser.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        const result = await dbUpdateAttendanceStatus(userId, date, status);\n        if (result === null) {\n            return { error: 'Cannot change status for a user on approved leave.' };\n        }\n        revalidatePath('/attendance');\n        revalidatePath('/my-requests');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to update attendance.' };\n    }\n}\n\n\n// --- Goal Actions ---\n\nconst createGoalSchema = z.object({\n  userId: z.string().min(1, 'Please select an employee.'),\n  title: z.string().min(5, 'Title must be at least 5 characters long.').max(100),\n  description: z.string().min(10, 'Description must be at least 10 characters long.').max(500),\n  deadline: z.string().min(1, 'A deadline is required.'),\n});\n\ntype CreateGoalState = {\n    message?: string;\n    error?: string;\n    success?: boolean;\n};\n\nexport async function createGoalAction(formData: FormData): Promise<CreateGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    const result = createGoalSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!result.success) {\n        const errors = result.error.flatten().fieldErrors;\n        return { error: Object.values(errors).flat().join(', ') || 'Invalid data provided.' };\n    }\n\n    const { userId, title, description, deadline } = result.data;\n    const targetUser = USERS.find(u => u.id === userId);\n\n    if (!targetUser) {\n        return { error: 'Selected user not found.' };\n    }\n    \n    try {\n        await addGoal({\n            userId: targetUser.id,\n            userName: targetUser.name,\n            title,\n            description,\n            deadline,\n        });\n        revalidatePath('/goals');\n        revalidatePath('/my-requests');\n        return { success: true, message: 'Goal created successfully!' };\n    } catch (e) {\n        return { error: 'Failed to create goal.' };\n    }\n}\n\nexport async function updateGoalStatusAction(goalId: string, status: GoalStatus) {\n  const user = await getUser();\n  if (!user) {\n    throw new Error('Unauthorized');\n  }\n\n  // In a real app, you'd also check if the user owns this goal.\n  await dbUpdateGoalStatus(goalId, status);\n  revalidatePath('/my-requests');\n  revalidatePath('/goals');\n}\n\ntype DeleteGoalState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function deleteGoalAction(goalId: string): Promise<DeleteGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        await dbDeleteGoal(goalId);\n        revalidatePath('/goals');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to delete goal.' };\n    }\n}\n\n\n// --- AI Insight Action ---\n\ntype ReportState = {\n  report?: string;\n  error?: string;\n};\n\nexport async function generateReportAction(): Promise<ReportState> {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    return { error: 'Unauthorized' };\n  }\n\n  try {\n    const leaveData: LeaveRequest[] = await getLeaveRequests();\n    \n    const anonymizedData = leaveData.map(d => ({\n        startDate: d.startDate,\n        endDate: d.endDate,\n        reason: d.reason,\n        status: d.status,\n    }));\n\n    if (anonymizedData.length === 0) {\n        return { report: \"No leave request data available to generate a report.\" };\n    }\n\n    const { report } = await generateInsightReport({\n      leaveRequestData: JSON.stringify(anonymizedData),\n    });\n\n    return { report };\n  } catch (error) {\n    console.error(error);\n    return { error: 'Failed to generate insights report.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA6HsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/leave-requests-table.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n} from '@/components/ui/table';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport { format, parseISO } from 'date-fns';\nimport { updateLeaveStatus } from '@/lib/actions';\nimport { useTransition } from 'react';\nimport { toast } from '@/hooks/use-toast';\nimport { CheckCircle, XCircle, Clock } from 'lucide-react';\n\ntype LeaveRequest = {\n  id: string;\n  userId: string;\n  userName: string;\n  userAvatarUrl: string;\n  startDate: string;\n  endDate: string;\n  reason: string;\n  status: 'pending' | 'approved' | 'rejected';\n  createdAt: string;\n};\n\n\ntype LeaveRequestsTableProps = {\n  data: LeaveRequest[];\n  isAdmin: boolean;\n};\n\nfunction getInitials(name: string) {\n  return name.split(' ').map((n) => n[0]).join('');\n}\n\nconst statusConfig = {\n  pending: {\n    label: 'Pending',\n    color: 'bg-yellow-500 hover:bg-yellow-500/90',\n    icon: <Clock className=\"h-3 w-3\" />,\n  },\n  approved: {\n    label: 'Approved',\n    color: 'bg-green-500 hover:bg-green-500/90',\n    icon: <CheckCircle className=\"h-3 w-3\" />,\n  },\n  rejected: {\n    label: 'Rejected',\n    color: 'bg-red-500 hover:bg-red-500/90',\n    icon: <XCircle className=\"h-3 w-3\" />,\n  },\n};\n\nfunction StatusBadge({ status }: { status: LeaveRequest['status'] }) {\n  const { label, color, icon } = statusConfig[status];\n  return (\n    <Badge className={`capitalize text-white ${color}`}>\n      {icon}\n      <span className=\"ml-1\">{label}</span>\n    </Badge>\n  );\n}\n\nfunction ActionButtons({ requestId }: { requestId: string }) {\n  const [isPending, startTransition] = useTransition();\n\n  const handleAction = (status: 'approved' | 'rejected') => {\n    startTransition(async () => {\n      try {\n        await updateLeaveStatus(requestId, status);\n        toast({\n          title: 'Success',\n          description: `Request has been ${status}.`,\n        });\n      } catch (error) {\n        toast({\n          variant: 'destructive',\n          title: 'Error',\n          description: 'Failed to update request status.',\n        });\n      }\n    });\n  };\n\n  return (\n    <div className=\"flex gap-2\">\n      <Button\n        size=\"sm\"\n        variant=\"outline\"\n        className=\"border-green-500 text-green-500 hover:bg-green-500 hover:text-white\"\n        onClick={() => handleAction('approved')}\n        disabled={isPending}\n      >\n        Approve\n      </Button>\n      <Button\n        size=\"sm\"\n        variant=\"outline\"\n        className=\"border-red-500 text-red-500 hover:bg-red-500 hover:text-white\"\n        onClick={() => handleAction('rejected')}\n        disabled={isPending}\n      >\n        Reject\n      </Button>\n    </div>\n  );\n}\n\nexport function LeaveRequestsTable({ data, isAdmin }: LeaveRequestsTableProps) {\n  const title = isAdmin ? 'All Leave Requests' : 'My Leave Requests';\n  const description = isAdmin\n    ? 'Review and manage all leave requests from your team.'\n    : 'A history of your past and pending leave requests.';\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"overflow-x-auto\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Employee</TableHead>\n                <TableHead>Dates</TableHead>\n                <TableHead className=\"hidden md:table-cell\">Reason</TableHead>\n                <TableHead>Status</TableHead>\n                {isAdmin && <TableHead className=\"text-right\">Actions</TableHead>}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {data.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={isAdmin ? 5 : 4} className=\"text-center\">\n                    No leave requests found.\n                  </TableCell>\n                </TableRow>\n              ) : (\n                data.map((request) => (\n                  <TableRow key={request.id}>\n                    <TableCell>\n                      <div className=\"flex items-center gap-2\">\n                        <Avatar className=\"h-8 w-8\">\n                          <AvatarImage src={request.userAvatarUrl} alt={request.userName} />\n                          <AvatarFallback>{getInitials(request.userName)}</AvatarFallback>\n                        </Avatar>\n                        <span className=\"font-medium\">{request.userName}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      {format(parseISO(request.startDate), 'MMM d')} - {format(parseISO(request.endDate), 'MMM d, yyyy')}\n                    </TableCell>\n                    <TableCell className=\"hidden md:table-cell max-w-xs truncate\">{request.reason}</TableCell>\n                    <TableCell>\n                      <StatusBadge status={request.status} />\n                    </TableCell>\n                    {isAdmin && (\n                      <TableCell className=\"text-right\">\n                        {request.status === 'pending' ? <ActionButtons requestId={request.id} /> : '-'}\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 789, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/my-attendance-calendar.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Calendar } from '@/components/ui/calendar';\nimport type { Attendance } from '@/lib/types';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport { format, startOfMonth, endOfMonth, eachDayOfInterval, addMonths, subMonths, isSameDay, isSameMonth, parseISO } from 'date-fns';\nimport { Skeleton } from '../ui/skeleton';\n\ntype MyAttendanceCalendarProps = {\n  attendanceData: Attendance[];\n};\n\ntype DayWithStatus = {\n    day: Date;\n    status: Attendance['status'] | 'weekend' | null;\n};\n\nfunction CalendarSkeleton() {\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <Skeleton className=\"h-8 w-8\" />\n        <Skeleton className=\"h-6 w-32\" />\n        <Skeleton className=\"h-8 w-8\" />\n      </div>\n      <div className=\"grid grid-cols-7 gap-2\">\n        {[...Array(35)].map((_, i) => (\n          <Skeleton key={i} className=\"h-10 w-10 rounded-full\" />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport function MyAttendanceCalendar({ attendanceData }: MyAttendanceCalendarProps) {\n  const [currentMonth, setCurrentMonth] = React.useState(new Date());\n  const [isClient, setIsClient] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  const handleNextMonth = () => {\n    setCurrentMonth(addMonths(currentMonth, 1));\n  };\n\n  const handlePrevMonth = () => {\n    setCurrentMonth(subMonths(currentMonth, 1));\n  };\n  \n  if (!isClient) {\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle>My Attendance</CardTitle>\n                <CardDescription>A monthly overview of your attendance.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"flex flex-col items-center\">\n                <CalendarSkeleton />\n            </CardContent>\n        </Card>\n    );\n  }\n\n  const daysInMonth = eachDayOfInterval({\n    start: startOfMonth(currentMonth),\n    end: endOfMonth(currentMonth),\n  });\n\n  const daysWithStatus: DayWithStatus[] = daysInMonth.map(day => {\n    const dayString = format(day, 'yyyy-MM-dd');\n    const attendanceRecord = attendanceData.find(record => record.date === dayString);\n    const dayOfWeek = day.getDay();\n    let status: DayWithStatus['status'] = null;\n    if (attendanceRecord) {\n        status = attendanceRecord.status;\n    } else if (dayOfWeek === 0 || dayOfWeek === 6) {\n        status = 'weekend';\n    }\n    return { day, status };\n  });\n\n  const presentDays = attendanceData.filter(a => isSameMonth(parseISO(a.date), currentMonth) && a.status === 'present').length;\n  const totalWorkingDays = daysWithStatus.filter(d => d.status !== 'weekend' && d.day <= new Date()).length;\n  const attendancePercentage = totalWorkingDays > 0 ? (presentDays / totalWorkingDays) * 100 : 0;\n  \n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>My Attendance</CardTitle>\n        <CardDescription>A monthly overview of your attendance.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex flex-col items-center\">\n        <>\n            <div className=\"text-center mb-4\">\n                <p className=\"text-sm text-muted-foreground\">Overall Attendance till {format(new Date(), 'dd-MM-yyyy')}</p>\n                <p className=\"text-2xl font-bold\">{presentDays}/{totalWorkingDays} ({attendancePercentage.toFixed(2)}%)</p>\n            </div>\n            <div className=\"flex items-center justify-between w-full mb-4 px-4\">\n            <Button variant=\"outline\" size=\"icon\" onClick={handlePrevMonth}>\n                <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n            <h2 className=\"font-semibold text-lg\">{format(currentMonth, 'MMMM yyyy')}</h2>\n            <Button variant=\"outline\" size=\"icon\" onClick={handleNextMonth}>\n                <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n            </div>\n            <Calendar\n                month={currentMonth}\n                onMonthChange={setCurrentMonth}\n                className=\"p-0\"\n                classNames={{\n                    day: \"w-10 h-10 rounded-full\",\n                    day_selected: \"\",\n                    day_today: \"bg-transparent text-foreground font-normal rounded-full border border-primary\",\n                }}\n                components={{\n                    DayContent: ({ date }) => {\n                        const dayString = format(date, 'yyyy-MM-dd');\n                        const dayInfo = daysWithStatus.find(d => format(d.day, 'yyyy-MM-dd') === dayString);\n                        const status = dayInfo?.status;\n\n                        let statusClass = '';\n                        switch (status) {\n                            case 'present':\n                                statusClass = 'bg-green-500 text-white';\n                                break;\n                            case 'absent':\n                                statusClass = 'bg-red-500 text-white';\n                                break;\n                            case 'on_leave':\n                                statusClass = 'bg-orange-500 text-white';\n                                break;\n                            default:\n                                statusClass = 'text-foreground';\n                        }\n                        if (isSameDay(date, new Date()) && status) {\n                        statusClass += ' ring-2 ring-primary';\n                        }\n\n                        return (\n                            <div className={`flex items-center justify-center w-full h-full rounded-full ${statusClass}`}>\n                            {format(date, 'd')}\n                            </div>\n                        );\n                    },\n                }}\n                modifiersStyles={{\n                    selected: { backgroundColor: 'transparent' },\n                    today: { outline: 'none' },\n                }}\n                showOutsideDays={false}\n            />\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-x-6 gap-y-2 mt-6 text-sm\">\n                <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 rounded-full bg-green-500\" />\n                    <span>Present</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 rounded-full bg-red-500\" />\n                    <span>Absent</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 rounded-full bg-orange-500\" />\n                    <span>On Leave</span>\n                </div>\n            </div>\n        </>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1283, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,wKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,6LAAC,wKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gIACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,wKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,6LAAC;YAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;;AAIjD,iBAAiB,WAAW,GAAG,wKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1376, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createSession, deleteSession, getUser } from '@/lib/auth';\nimport {\n  addLeaveRequest,\n  getLeaveRequests,\n  updateLeaveRequestStatus,\n  updateAttendanceStatus as dbUpdateAttendanceStatus,\n  addGoal,\n  updateGoalStatus as dbUpdateGoalStatus,\n  getLeaveRequestById,\n  deleteGoal as dbDeleteGoal,\n} from '@/lib/mock-data';\nimport { USERS } from '@/lib/data/users';\nimport { generateInsightReport } from '@/ai/flows/generate-insight-report';\nimport type { LeaveRequest, AttendanceStatus, GoalStatus } from './types';\nimport { format } from 'date-fns';\n\n// --- Auth Actions ---\n\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(1, 'Password is required'),\n});\n\ntype LoginState = {\n  error?: string;\n  success?: boolean;\n  redirectTo?: string;\n};\n\nexport async function login(formData: FormData): Promise<LoginState> {\n  const result = loginSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!result.success) {\n    return { error: result.error.errors.map((e) => e.message).join(', ') };\n  }\n\n  const { email, password } = result.data;\n\n  const user = USERS.find((u) => u.email === email);\n\n  const MOCK_PASSWORDS: Record<string, string> = {\n    'sehajdeep@unicube.com': 'admin123',\n    'naitik@unicube.com': 'user123',\n    'arjun@unicube.com': 'user123',\n  }\n\n  if (!user || MOCK_PASSWORDS[user.email] !== password) {\n    return { error: 'Invalid email or password' };\n  }\n\n  await createSession(user.id);\n  \n  if (user.role === 'admin') {\n    return { success: true, redirectTo: '/dashboard'};\n  } else {\n    return { success: true, redirectTo: '/my-requests'};\n  }\n}\n\nexport async function logout() {\n  await deleteSession();\n  redirect('/');\n}\n\n// --- Leave Request Actions ---\n\nconst leaveRequestSchema = z.object({\n  startDate: z.string().min(1, 'Start date is required.'),\n  endDate: z.string().min(1, 'End date is required.'),\n  reason: z.string().min(10, 'Reason must be at least 10 characters long.').max(200, 'Reason cannot exceed 200 characters.'),\n});\n\ntype LeaveRequestState = {\n  message?: string;\n  error?: string;\n  success?: boolean;\n};\n\nexport async function submitLeaveRequest(formData: FormData): Promise<LeaveRequestState> {\n  const user = await getUser();\n  if (!user) {\n    return { error: 'You must be logged in to submit a request.' };\n  }\n\n  const result = leaveRequestSchema.safeParse({\n    startDate: formData.get('startDate'),\n    endDate: formData.get('endDate'),\n    reason: formData.get('reason'),\n  });\n\n  if (!result.success) {\n    return { error: result.error.flatten().fieldErrors.reason?.[0] || 'Invalid data provided.' };\n  }\n\n  const { startDate, endDate, reason } = result.data;\n\n  if (startDate > endDate) {\n    return { error: 'Start date cannot be after the end date.' };\n  }\n\n  try {\n    await addLeaveRequest({\n      userId: user.id,\n      userName: user.name,\n      userAvatarUrl: user.avatarUrl,\n      startDate,\n      endDate,\n      reason,\n      status: 'pending',\n    });\n\n    revalidatePath('/my-requests');\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Leave request submitted successfully!' };\n  } catch (e) {\n    return { error: 'Failed to submit leave request.' };\n  }\n}\n\nexport async function updateLeaveStatus(leaveId: string, status: 'approved' | 'rejected') {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    throw new Error('Unauthorized');\n  }\n\n  const leaveRequest = await getLeaveRequestById(leaveId);\n  if (!leaveRequest) {\n    throw new Error('Leave request not found');\n  }\n\n  await updateLeaveRequestStatus(leaveId, status);\n  \n  if (status === 'approved') {\n    // Also update attendance records to 'on_leave' for the duration\n    for (let d = new Date(leaveRequest.startDate); d <= new Date(leaveRequest.endDate); d.setDate(d.getDate() + 1)) {\n        await dbUpdateAttendanceStatus(leaveRequest.userId, format(d, 'yyyy-MM-dd'), 'on_leave');\n    }\n  }\n\n  revalidatePath('/dashboard');\n  revalidatePath('/attendance');\n  revalidatePath('/my-requests');\n}\n\n// --- Attendance Actions ---\n\ntype AttendanceState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function updateAttendanceAction(userId: string, date: string, status: AttendanceStatus): Promise<AttendanceState> {\n    const adminUser = await getUser();\n    if (!adminUser || adminUser.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        const result = await dbUpdateAttendanceStatus(userId, date, status);\n        if (result === null) {\n            return { error: 'Cannot change status for a user on approved leave.' };\n        }\n        revalidatePath('/attendance');\n        revalidatePath('/my-requests');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to update attendance.' };\n    }\n}\n\n\n// --- Goal Actions ---\n\nconst createGoalSchema = z.object({\n  userId: z.string().min(1, 'Please select an employee.'),\n  title: z.string().min(5, 'Title must be at least 5 characters long.').max(100),\n  description: z.string().min(10, 'Description must be at least 10 characters long.').max(500),\n  deadline: z.string().min(1, 'A deadline is required.'),\n});\n\ntype CreateGoalState = {\n    message?: string;\n    error?: string;\n    success?: boolean;\n};\n\nexport async function createGoalAction(formData: FormData): Promise<CreateGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    const result = createGoalSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!result.success) {\n        const errors = result.error.flatten().fieldErrors;\n        return { error: Object.values(errors).flat().join(', ') || 'Invalid data provided.' };\n    }\n\n    const { userId, title, description, deadline } = result.data;\n    const targetUser = USERS.find(u => u.id === userId);\n\n    if (!targetUser) {\n        return { error: 'Selected user not found.' };\n    }\n    \n    try {\n        await addGoal({\n            userId: targetUser.id,\n            userName: targetUser.name,\n            title,\n            description,\n            deadline,\n        });\n        revalidatePath('/goals');\n        revalidatePath('/my-requests');\n        return { success: true, message: 'Goal created successfully!' };\n    } catch (e) {\n        return { error: 'Failed to create goal.' };\n    }\n}\n\nexport async function updateGoalStatusAction(goalId: string, status: GoalStatus) {\n  const user = await getUser();\n  if (!user) {\n    throw new Error('Unauthorized');\n  }\n\n  // In a real app, you'd also check if the user owns this goal.\n  await dbUpdateGoalStatus(goalId, status);\n  revalidatePath('/my-requests');\n  revalidatePath('/goals');\n}\n\ntype DeleteGoalState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function deleteGoalAction(goalId: string): Promise<DeleteGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        await dbDeleteGoal(goalId);\n        revalidatePath('/goals');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to delete goal.' };\n    }\n}\n\n\n// --- AI Insight Action ---\n\ntype ReportState = {\n  report?: string;\n  error?: string;\n};\n\nexport async function generateReportAction(): Promise<ReportState> {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    return { error: 'Unauthorized' };\n  }\n\n  try {\n    const leaveData: LeaveRequest[] = await getLeaveRequests();\n    \n    const anonymizedData = leaveData.map(d => ({\n        startDate: d.startDate,\n        endDate: d.endDate,\n        reason: d.reason,\n        status: d.status,\n    }));\n\n    if (anonymizedData.length === 0) {\n        return { report: \"No leave request data available to generate a report.\" };\n    }\n\n    const { report } = await generateInsightReport({\n      leaveRequestData: JSON.stringify(anonymizedData),\n    });\n\n    return { report };\n  } catch (error) {\n    console.error(error);\n    return { error: 'Failed to generate insights report.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAoOsB,yBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1392, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/my-goals.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useTransition } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Label } from '@/components/ui/label';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\nimport { Badge } from '@/components/ui/badge';\nimport { format, parseISO } from 'date-fns';\nimport { updateGoalStatusAction } from '@/lib/actions';\nimport { toast } from '@/hooks/use-toast';\nimport { Target } from 'lucide-react';\n\ntype Goal = {\n  id: string;\n  userId: string;\n  userName: string;\n  title: string;\n  description: string;\n  deadline: string;\n  status: 'in_progress' | 'completed';\n  createdAt: string;\n};\n\n\ntype MyGoalsProps = {\n  data: Goal[];\n};\n\nexport function MyGoals({ data }: MyGoalsProps) {\n  const [isPending, startTransition] = useTransition();\n\n  const handleStatusChange = (goalId: string, checked: boolean) => {\n    startTransition(async () => {\n      const newStatus = checked ? 'completed' : 'in_progress';\n      try {\n        await updateGoalStatusAction(goalId, newStatus);\n        toast({\n          title: 'Success!',\n          description: `Goal marked as ${newStatus.replace('_', ' ')}.`,\n        });\n      } catch (error) {\n        toast({\n          variant: 'destructive',\n          title: 'Error',\n          description: 'Failed to update goal status.',\n        });\n      }\n    });\n  };\n\n  const sortedGoals = [...data].sort((a, b) => {\n    if (a.status === b.status) {\n      return parseISO(a.deadline).getTime() - parseISO(b.deadline).getTime();\n    }\n    return a.status === 'in_progress' ? -1 : 1;\n  });\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>My Goals</CardTitle>\n        <CardDescription>Your personal and performance goals assigned by your manager.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        {sortedGoals.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center text-center text-muted-foreground p-8 gap-4\">\n            <Target className=\"h-12 w-12\" />\n            <p>You don't have any goals assigned yet.</p>\n          </div>\n        ) : (\n          <Accordion type=\"single\" collapsible className=\"w-full\">\n            {sortedGoals.map((goal) => (\n              <AccordionItem value={goal.id} key={goal.id}>\n                 <div className=\"flex items-center w-full py-4\">\n                    <Checkbox\n                        id={`goal-${goal.id}`}\n                        checked={goal.status === 'completed'}\n                        onCheckedChange={(checked) => handleStatusChange(goal.id, !!checked)}\n                        disabled={isPending}\n                        aria-label={`Mark goal \"${goal.title}\" as complete`}\n                        className=\"mr-4\"\n                    />\n                    <AccordionTrigger className=\"flex-1 text-left p-0\">\n                        <div className=\"flex-1 text-left\">\n                            <p className={`font-medium ${goal.status === 'completed' ? 'line-through text-muted-foreground' : ''}`}>\n                                {goal.title}\n                            </p>\n                            <p className=\"text-sm text-muted-foreground\">\n                                Due: {format(parseISO(goal.deadline), 'MMM d, yyyy')}\n                            </p>\n                        </div>\n                        <Badge variant={goal.status === 'completed' ? 'secondary' : 'default'} className=\"capitalize ml-4\">\n                            {goal.status.replace('_', ' ')}\n                        </Badge>\n                    </AccordionTrigger>\n                </div>\n                <AccordionContent className=\"prose prose-sm dark:prose-invert max-w-none text-muted-foreground pl-12\">\n                  <p>{goal.description}</p>\n                </AccordionContent>\n              </AccordionItem>\n            ))}\n          </Accordion>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}