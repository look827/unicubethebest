{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createSession, deleteSession, getUser } from '@/lib/auth';\nimport {\n  addLeaveRequest,\n  getLeaveRequests,\n  updateLeaveRequestStatus,\n  updateAttendanceStatus as dbUpdateAttendanceStatus,\n  addGoal,\n  updateGoalStatus as dbUpdateGoalStatus,\n  getLeaveRequestById,\n  deleteGoal as dbDeleteGoal,\n} from '@/lib/mock-data';\nimport { USERS } from '@/lib/data/users';\nimport { generateInsightReport } from '@/ai/flows/generate-insight-report';\nimport type { LeaveRequest, AttendanceStatus, GoalStatus } from './types';\nimport { format } from 'date-fns';\n\n// --- Auth Actions ---\n\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(1, 'Password is required'),\n});\n\ntype LoginState = {\n  error?: string;\n  success?: boolean;\n  redirectTo?: string;\n};\n\nexport async function login(formData: FormData): Promise<LoginState> {\n  const result = loginSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!result.success) {\n    return { error: result.error.errors.map((e) => e.message).join(', ') };\n  }\n\n  const { email, password } = result.data;\n\n  const user = USERS.find((u) => u.email === email);\n\n  const MOCK_PASSWORDS: Record<string, string> = {\n    'sehajdeep@unicube.com': 'admin123',\n    'naitik@unicube.com': 'user123',\n    'arjun@unicube.com': 'user123',\n  }\n\n  if (!user || MOCK_PASSWORDS[user.email] !== password) {\n    return { error: 'Invalid email or password' };\n  }\n\n  await createSession(user.id);\n  \n  if (user.role === 'admin') {\n    return { success: true, redirectTo: '/dashboard'};\n  } else {\n    return { success: true, redirectTo: '/my-requests'};\n  }\n}\n\nexport async function logout() {\n  await deleteSession();\n  redirect('/');\n}\n\n// --- Leave Request Actions ---\n\nconst leaveRequestSchema = z.object({\n  startDate: z.string().min(1, 'Start date is required.'),\n  endDate: z.string().min(1, 'End date is required.'),\n  reason: z.string().min(10, 'Reason must be at least 10 characters long.').max(200, 'Reason cannot exceed 200 characters.'),\n});\n\ntype LeaveRequestState = {\n  message?: string;\n  error?: string;\n  success?: boolean;\n};\n\nexport async function submitLeaveRequest(formData: FormData): Promise<LeaveRequestState> {\n  const user = await getUser();\n  if (!user) {\n    return { error: 'You must be logged in to submit a request.' };\n  }\n\n  const result = leaveRequestSchema.safeParse({\n    startDate: formData.get('startDate'),\n    endDate: formData.get('endDate'),\n    reason: formData.get('reason'),\n  });\n\n  if (!result.success) {\n    return { error: result.error.flatten().fieldErrors.reason?.[0] || 'Invalid data provided.' };\n  }\n\n  const { startDate, endDate, reason } = result.data;\n\n  if (startDate > endDate) {\n    return { error: 'Start date cannot be after the end date.' };\n  }\n\n  try {\n    await addLeaveRequest({\n      userId: user.id,\n      userName: user.name,\n      userAvatarUrl: user.avatarUrl,\n      startDate,\n      endDate,\n      reason,\n      status: 'pending',\n    });\n\n    revalidatePath('/my-requests');\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Leave request submitted successfully!' };\n  } catch (e) {\n    return { error: 'Failed to submit leave request.' };\n  }\n}\n\nexport async function updateLeaveStatus(leaveId: string, status: 'approved' | 'rejected') {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    throw new Error('Unauthorized');\n  }\n\n  const leaveRequest = await getLeaveRequestById(leaveId);\n  if (!leaveRequest) {\n    throw new Error('Leave request not found');\n  }\n\n  await updateLeaveRequestStatus(leaveId, status);\n  \n  if (status === 'approved') {\n    // Also update attendance records to 'on_leave' for the duration\n    for (let d = new Date(leaveRequest.startDate); d <= new Date(leaveRequest.endDate); d.setDate(d.getDate() + 1)) {\n        await dbUpdateAttendanceStatus(leaveRequest.userId, format(d, 'yyyy-MM-dd'), 'on_leave');\n    }\n  }\n\n  revalidatePath('/dashboard');\n  revalidatePath('/attendance');\n  revalidatePath('/my-requests');\n}\n\n// --- Attendance Actions ---\n\ntype AttendanceState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function updateAttendanceAction(userId: string, date: string, status: AttendanceStatus): Promise<AttendanceState> {\n    const adminUser = await getUser();\n    if (!adminUser || adminUser.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        const result = await dbUpdateAttendanceStatus(userId, date, status);\n        if (result === null) {\n            return { error: 'Cannot change status for a user on approved leave.' };\n        }\n        revalidatePath('/attendance');\n        revalidatePath('/my-requests');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to update attendance.' };\n    }\n}\n\n\n// --- Goal Actions ---\n\nconst createGoalSchema = z.object({\n  userId: z.string().min(1, 'Please select an employee.'),\n  title: z.string().min(5, 'Title must be at least 5 characters long.').max(100),\n  description: z.string().min(10, 'Description must be at least 10 characters long.').max(500),\n  deadline: z.string().min(1, 'A deadline is required.'),\n});\n\ntype CreateGoalState = {\n    message?: string;\n    error?: string;\n    success?: boolean;\n};\n\nexport async function createGoalAction(formData: FormData): Promise<CreateGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    const result = createGoalSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!result.success) {\n        const errors = result.error.flatten().fieldErrors;\n        return { error: Object.values(errors).flat().join(', ') || 'Invalid data provided.' };\n    }\n\n    const { userId, title, description, deadline } = result.data;\n    const targetUser = USERS.find(u => u.id === userId);\n\n    if (!targetUser) {\n        return { error: 'Selected user not found.' };\n    }\n    \n    try {\n        await addGoal({\n            userId: targetUser.id,\n            userName: targetUser.name,\n            title,\n            description,\n            deadline,\n        });\n        revalidatePath('/goals');\n        revalidatePath('/my-requests');\n        return { success: true, message: 'Goal created successfully!' };\n    } catch (e) {\n        return { error: 'Failed to create goal.' };\n    }\n}\n\nexport async function updateGoalStatusAction(goalId: string, status: GoalStatus) {\n  const user = await getUser();\n  if (!user) {\n    throw new Error('Unauthorized');\n  }\n\n  // In a real app, you'd also check if the user owns this goal.\n  await dbUpdateGoalStatus(goalId, status);\n  revalidatePath('/my-requests');\n  revalidatePath('/goals');\n}\n\ntype DeleteGoalState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function deleteGoalAction(goalId: string): Promise<DeleteGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        await dbDeleteGoal(goalId);\n        revalidatePath('/goals');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to delete goal.' };\n    }\n}\n\n\n// --- AI Insight Action ---\n\ntype ReportState = {\n  report?: string;\n  error?: string;\n};\n\nexport async function generateReportAction(): Promise<ReportState> {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    return { error: 'Unauthorized' };\n  }\n\n  try {\n    const leaveData: LeaveRequest[] = await getLeaveRequests();\n    \n    const anonymizedData = leaveData.map(d => ({\n        startDate: d.startDate,\n        endDate: d.endDate,\n        reason: d.reason,\n        status: d.status,\n    }));\n\n    if (anonymizedData.length === 0) {\n        return { report: \"No leave request data available to generate a report.\" };\n    }\n\n    const { report } = await generateInsightReport({\n      leaveRequestData: JSON.stringify(anonymizedData),\n    });\n\n    return { report };\n  } catch (error) {\n    console.error(error);\n    return { error: 'Failed to generate insights report.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA6HsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/leave-requests-table.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n} from '@/components/ui/table';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { Button } from '@/components/ui/button';\nimport { format, parseISO } from 'date-fns';\nimport { updateLeaveStatus } from '@/lib/actions';\nimport { useTransition } from 'react';\nimport { toast } from '@/hooks/use-toast';\nimport { CheckCircle, XCircle, Clock } from 'lucide-react';\n\ntype LeaveRequest = {\n  id: string;\n  userId: string;\n  userName: string;\n  userAvatarUrl: string;\n  startDate: string;\n  endDate: string;\n  reason: string;\n  status: 'pending' | 'approved' | 'rejected';\n  createdAt: string;\n};\n\n\ntype LeaveRequestsTableProps = {\n  data: LeaveRequest[];\n  isAdmin: boolean;\n};\n\nfunction getInitials(name: string) {\n  return name.split(' ').map((n) => n[0]).join('');\n}\n\nconst statusConfig = {\n  pending: {\n    label: 'Pending',\n    color: 'bg-yellow-500 hover:bg-yellow-500/90',\n    icon: <Clock className=\"h-3 w-3\" />,\n  },\n  approved: {\n    label: 'Approved',\n    color: 'bg-green-500 hover:bg-green-500/90',\n    icon: <CheckCircle className=\"h-3 w-3\" />,\n  },\n  rejected: {\n    label: 'Rejected',\n    color: 'bg-red-500 hover:bg-red-500/90',\n    icon: <XCircle className=\"h-3 w-3\" />,\n  },\n};\n\nfunction StatusBadge({ status }: { status: LeaveRequest['status'] }) {\n  const { label, color, icon } = statusConfig[status];\n  return (\n    <Badge className={`capitalize text-white ${color}`}>\n      {icon}\n      <span className=\"ml-1\">{label}</span>\n    </Badge>\n  );\n}\n\nfunction ActionButtons({ requestId }: { requestId: string }) {\n  const [isPending, startTransition] = useTransition();\n\n  const handleAction = (status: 'approved' | 'rejected') => {\n    startTransition(async () => {\n      try {\n        await updateLeaveStatus(requestId, status);\n        toast({\n          title: 'Success',\n          description: `Request has been ${status}.`,\n        });\n      } catch (error) {\n        toast({\n          variant: 'destructive',\n          title: 'Error',\n          description: 'Failed to update request status.',\n        });\n      }\n    });\n  };\n\n  return (\n    <div className=\"flex gap-2\">\n      <Button\n        size=\"sm\"\n        variant=\"outline\"\n        className=\"border-green-500 text-green-500 hover:bg-green-500 hover:text-white\"\n        onClick={() => handleAction('approved')}\n        disabled={isPending}\n      >\n        Approve\n      </Button>\n      <Button\n        size=\"sm\"\n        variant=\"outline\"\n        className=\"border-red-500 text-red-500 hover:bg-red-500 hover:text-white\"\n        onClick={() => handleAction('rejected')}\n        disabled={isPending}\n      >\n        Reject\n      </Button>\n    </div>\n  );\n}\n\nexport function LeaveRequestsTable({ data, isAdmin }: LeaveRequestsTableProps) {\n  const title = isAdmin ? 'All Leave Requests' : 'My Leave Requests';\n  const description = isAdmin\n    ? 'Review and manage all leave requests from your team.'\n    : 'A history of your past and pending leave requests.';\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{title}</CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"overflow-x-auto\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Employee</TableHead>\n                <TableHead>Dates</TableHead>\n                <TableHead className=\"hidden md:table-cell\">Reason</TableHead>\n                <TableHead>Status</TableHead>\n                {isAdmin && <TableHead className=\"text-right\">Actions</TableHead>}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {data.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={isAdmin ? 5 : 4} className=\"text-center\">\n                    No leave requests found.\n                  </TableCell>\n                </TableRow>\n              ) : (\n                data.map((request) => (\n                  <TableRow key={request.id}>\n                    <TableCell>\n                      <div className=\"flex items-center gap-2\">\n                        <Avatar className=\"h-8 w-8\">\n                          <AvatarImage src={request.userAvatarUrl} alt={request.userName} />\n                          <AvatarFallback>{getInitials(request.userName)}</AvatarFallback>\n                        </Avatar>\n                        <span className=\"font-medium\">{request.userName}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      {format(parseISO(request.startDate), 'MMM d')} - {format(parseISO(request.endDate), 'MMM d, yyyy')}\n                    </TableCell>\n                    <TableCell className=\"hidden md:table-cell max-w-xs truncate\">{request.reason}</TableCell>\n                    <TableCell>\n                      <StatusBadge status={request.status} />\n                    </TableCell>\n                    {isAdmin && (\n                      <TableCell className=\"text-right\">\n                        {request.status === 'pending' ? <ActionButtons requestId={request.id} /> : '-'}\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 780, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      onOpenAutoFocus={(e) => e.preventDefault()}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,iBAAiB,CAAC,IAAM,EAAE,cAAc;gBACxC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 932, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createSession, deleteSession, getUser } from '@/lib/auth';\nimport {\n  addLeaveRequest,\n  getLeaveRequests,\n  updateLeaveRequestStatus,\n  updateAttendanceStatus as dbUpdateAttendanceStatus,\n  addGoal,\n  updateGoalStatus as dbUpdateGoalStatus,\n  getLeaveRequestById,\n  deleteGoal as dbDeleteGoal,\n} from '@/lib/mock-data';\nimport { USERS } from '@/lib/data/users';\nimport { generateInsightReport } from '@/ai/flows/generate-insight-report';\nimport type { LeaveRequest, AttendanceStatus, GoalStatus } from './types';\nimport { format } from 'date-fns';\n\n// --- Auth Actions ---\n\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(1, 'Password is required'),\n});\n\ntype LoginState = {\n  error?: string;\n  success?: boolean;\n  redirectTo?: string;\n};\n\nexport async function login(formData: FormData): Promise<LoginState> {\n  const result = loginSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!result.success) {\n    return { error: result.error.errors.map((e) => e.message).join(', ') };\n  }\n\n  const { email, password } = result.data;\n\n  const user = USERS.find((u) => u.email === email);\n\n  const MOCK_PASSWORDS: Record<string, string> = {\n    'sehajdeep@unicube.com': 'admin123',\n    'naitik@unicube.com': 'user123',\n    'arjun@unicube.com': 'user123',\n  }\n\n  if (!user || MOCK_PASSWORDS[user.email] !== password) {\n    return { error: 'Invalid email or password' };\n  }\n\n  await createSession(user.id);\n  \n  if (user.role === 'admin') {\n    return { success: true, redirectTo: '/dashboard'};\n  } else {\n    return { success: true, redirectTo: '/my-requests'};\n  }\n}\n\nexport async function logout() {\n  await deleteSession();\n  redirect('/');\n}\n\n// --- Leave Request Actions ---\n\nconst leaveRequestSchema = z.object({\n  startDate: z.string().min(1, 'Start date is required.'),\n  endDate: z.string().min(1, 'End date is required.'),\n  reason: z.string().min(10, 'Reason must be at least 10 characters long.').max(200, 'Reason cannot exceed 200 characters.'),\n});\n\ntype LeaveRequestState = {\n  message?: string;\n  error?: string;\n  success?: boolean;\n};\n\nexport async function submitLeaveRequest(formData: FormData): Promise<LeaveRequestState> {\n  const user = await getUser();\n  if (!user) {\n    return { error: 'You must be logged in to submit a request.' };\n  }\n\n  const result = leaveRequestSchema.safeParse({\n    startDate: formData.get('startDate'),\n    endDate: formData.get('endDate'),\n    reason: formData.get('reason'),\n  });\n\n  if (!result.success) {\n    return { error: result.error.flatten().fieldErrors.reason?.[0] || 'Invalid data provided.' };\n  }\n\n  const { startDate, endDate, reason } = result.data;\n\n  if (startDate > endDate) {\n    return { error: 'Start date cannot be after the end date.' };\n  }\n\n  try {\n    await addLeaveRequest({\n      userId: user.id,\n      userName: user.name,\n      userAvatarUrl: user.avatarUrl,\n      startDate,\n      endDate,\n      reason,\n      status: 'pending',\n    });\n\n    revalidatePath('/my-requests');\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Leave request submitted successfully!' };\n  } catch (e) {\n    return { error: 'Failed to submit leave request.' };\n  }\n}\n\nexport async function updateLeaveStatus(leaveId: string, status: 'approved' | 'rejected') {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    throw new Error('Unauthorized');\n  }\n\n  const leaveRequest = await getLeaveRequestById(leaveId);\n  if (!leaveRequest) {\n    throw new Error('Leave request not found');\n  }\n\n  await updateLeaveRequestStatus(leaveId, status);\n  \n  if (status === 'approved') {\n    // Also update attendance records to 'on_leave' for the duration\n    for (let d = new Date(leaveRequest.startDate); d <= new Date(leaveRequest.endDate); d.setDate(d.getDate() + 1)) {\n        await dbUpdateAttendanceStatus(leaveRequest.userId, format(d, 'yyyy-MM-dd'), 'on_leave');\n    }\n  }\n\n  revalidatePath('/dashboard');\n  revalidatePath('/attendance');\n  revalidatePath('/my-requests');\n}\n\n// --- Attendance Actions ---\n\ntype AttendanceState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function updateAttendanceAction(userId: string, date: string, status: AttendanceStatus): Promise<AttendanceState> {\n    const adminUser = await getUser();\n    if (!adminUser || adminUser.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        const result = await dbUpdateAttendanceStatus(userId, date, status);\n        if (result === null) {\n            return { error: 'Cannot change status for a user on approved leave.' };\n        }\n        revalidatePath('/attendance');\n        revalidatePath('/my-requests');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to update attendance.' };\n    }\n}\n\n\n// --- Goal Actions ---\n\nconst createGoalSchema = z.object({\n  userId: z.string().min(1, 'Please select an employee.'),\n  title: z.string().min(5, 'Title must be at least 5 characters long.').max(100),\n  description: z.string().min(10, 'Description must be at least 10 characters long.').max(500),\n  deadline: z.string().min(1, 'A deadline is required.'),\n});\n\ntype CreateGoalState = {\n    message?: string;\n    error?: string;\n    success?: boolean;\n};\n\nexport async function createGoalAction(formData: FormData): Promise<CreateGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    const result = createGoalSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!result.success) {\n        const errors = result.error.flatten().fieldErrors;\n        return { error: Object.values(errors).flat().join(', ') || 'Invalid data provided.' };\n    }\n\n    const { userId, title, description, deadline } = result.data;\n    const targetUser = USERS.find(u => u.id === userId);\n\n    if (!targetUser) {\n        return { error: 'Selected user not found.' };\n    }\n    \n    try {\n        await addGoal({\n            userId: targetUser.id,\n            userName: targetUser.name,\n            title,\n            description,\n            deadline,\n        });\n        revalidatePath('/goals');\n        revalidatePath('/my-requests');\n        return { success: true, message: 'Goal created successfully!' };\n    } catch (e) {\n        return { error: 'Failed to create goal.' };\n    }\n}\n\nexport async function updateGoalStatusAction(goalId: string, status: GoalStatus) {\n  const user = await getUser();\n  if (!user) {\n    throw new Error('Unauthorized');\n  }\n\n  // In a real app, you'd also check if the user owns this goal.\n  await dbUpdateGoalStatus(goalId, status);\n  revalidatePath('/my-requests');\n  revalidatePath('/goals');\n}\n\ntype DeleteGoalState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function deleteGoalAction(goalId: string): Promise<DeleteGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        await dbDeleteGoal(goalId);\n        revalidatePath('/goals');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to delete goal.' };\n    }\n}\n\n\n// --- AI Insight Action ---\n\ntype ReportState = {\n  report?: string;\n  error?: string;\n};\n\nexport async function generateReportAction(): Promise<ReportState> {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    return { error: 'Unauthorized' };\n  }\n\n  try {\n    const leaveData: LeaveRequest[] = await getLeaveRequests();\n    \n    const anonymizedData = leaveData.map(d => ({\n        startDate: d.startDate,\n        endDate: d.endDate,\n        reason: d.reason,\n        status: d.status,\n    }));\n\n    if (anonymizedData.length === 0) {\n        return { report: \"No leave request data available to generate a report.\" };\n    }\n\n    const { report } = await generateInsightReport({\n      leaveRequestData: JSON.stringify(anonymizedData),\n    });\n\n    return { report };\n  } catch (error) {\n    console.error(error);\n    return { error: 'Failed to generate insights report.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA4QsB,uBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/insight-generator.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useTransition } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport { Sparkles, AlertCircle, Bot } from 'lucide-react';\nimport { generateReportAction } from '@/lib/actions';\nimport { ScrollArea } from '../ui/scroll-area';\n\nexport function InsightGenerator() {\n  const [isPending, startTransition] = useTransition();\n  const [report, setReport] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const handleGenerate = () => {\n    startTransition(async () => {\n      setError(null);\n      setReport(null);\n      const result = await generateReportAction();\n      if (result.report) {\n        setReport(result.report);\n      } else if (result.error) {\n        setError(result.error);\n      }\n      setIsDialogOpen(true);\n    });\n  };\n\n  return (\n    <>\n      <Card className=\"h-full\">\n        <CardHeader>\n          <CardTitle>AI Insight Tool</CardTitle>\n          <CardDescription>\n            Analyze leave trends and identify significant patterns with our AI-powered tool.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"flex flex-col items-center justify-center text-center gap-4\">\n            <div className=\"p-4 bg-primary/10 rounded-full\">\n                <Bot className=\"h-12 w-12 text-primary\" />\n            </div>\n            <p className=\"text-sm text-muted-foreground\">Click the button to generate an insights report on leave requests. The AI will analyze trends, conflicts, and frequencies.</p>\n          <Button onClick={handleGenerate} disabled={isPending}>\n            <Sparkles className=\"mr-2 h-4 w-4\" />\n            {isPending ? 'Analyzing...' : 'Generate Insights'}\n          </Button>\n        </CardContent>\n      </Card>\n\n      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n        <DialogContent className=\"sm:max-w-[425px] md:max-w-[600px]\">\n          <DialogHeader>\n            <DialogTitle>AI Insights Report</DialogTitle>\n            <DialogDescription>\n              Analysis of leave request data for Unicube.\n            </DialogDescription>\n          </DialogHeader>\n          <ScrollArea className=\"max-h-[60vh] pr-4\">\n            <div className=\"prose prose-sm dark:prose-invert max-w-none\">\n                {isPending && <p>Generating report...</p>}\n                {error && (\n                <Alert variant=\"destructive\">\n                    <AlertCircle className=\"h-4 w-4\" />\n                    <AlertTitle>Error</AlertTitle>\n                    <AlertDescription>{error}</AlertDescription>\n                </Alert>\n                )}\n                {report && <pre className=\"whitespace-pre-wrap text-sm text-foreground bg-muted p-4 rounded-md font-body\">{report}</pre>}\n            </div>\n          </ScrollArea>\n           <DialogClose asChild>\n              <Button type=\"button\" variant=\"secondary\">\n                Close\n              </Button>\n            </DialogClose>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAOA;AACA;AACA;AAQA;AAAA;AAAA;AACA;AACA;;;AAtBA;;;;;;;;;AAwBO,SAAS;;IACd,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;IACjD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,iBAAiB;QACrB,gBAAgB;YACd,SAAS;YACT,UAAU;YACV,MAAM,SAAS,MAAM,CAAA,GAAA,qJAAA,CAAA,uBAAoB,AAAD;YACxC,IAAI,OAAO,MAAM,EAAE;gBACjB,UAAU,OAAO,MAAM;YACzB,OAAO,IAAI,OAAO,KAAK,EAAE;gBACvB,SAAS,OAAO,KAAK;YACvB;YACA,gBAAgB;QAClB;IACF;IAEA,qBACE;;0BACE,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,6LAAC,mIAAA,CAAA,aAAU;;0CACT,6LAAC,mIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,6LAAC,mIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAInB,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACnB,6LAAC;gCAAI,WAAU;0CACX,cAAA,6LAAC,mMAAA,CAAA,MAAG;oCAAC,WAAU;;;;;;;;;;;0CAEnB,6LAAC;gCAAE,WAAU;0CAAgC;;;;;;0CAC/C,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAgB,UAAU;;kDACzC,6LAAC,6MAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;oCACnB,YAAY,iBAAiB;;;;;;;;;;;;;;;;;;;0BAKpC,6LAAC,qIAAA,CAAA,SAAM;gBAAC,MAAM;gBAAc,cAAc;0BACxC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;oBAAC,WAAU;;sCACvB,6LAAC,qIAAA,CAAA,eAAY;;8CACX,6LAAC,qIAAA,CAAA,cAAW;8CAAC;;;;;;8CACb,6LAAC,qIAAA,CAAA,oBAAiB;8CAAC;;;;;;;;;;;;sCAIrB,6LAAC,6IAAA,CAAA,aAAU;4BAAC,WAAU;sCACpB,cAAA,6LAAC;gCAAI,WAAU;;oCACV,2BAAa,6LAAC;kDAAE;;;;;;oCAChB,uBACD,6LAAC,oIAAA,CAAA,QAAK;wCAAC,SAAQ;;0DACX,6LAAC,uNAAA,CAAA,cAAW;gDAAC,WAAU;;;;;;0DACvB,6LAAC,oIAAA,CAAA,aAAU;0DAAC;;;;;;0DACZ,6LAAC,oIAAA,CAAA,mBAAgB;0DAAE;;;;;;;;;;;;oCAGtB,wBAAU,6LAAC;wCAAI,WAAU;kDAAiF;;;;;;;;;;;;;;;;;sCAGhH,6LAAC,qIAAA,CAAA,cAAW;4BAAC,OAAO;sCACjB,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,SAAQ;0CAAY;;;;;;;;;;;;;;;;;;;;;;;;AAQxD;GAvEgB;;QACuB,6JAAA,CAAA,gBAAa;;;KADpC","debugId":null}}]
}