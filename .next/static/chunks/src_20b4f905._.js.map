{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createSession, deleteSession, getUser } from '@/lib/auth';\nimport {\n  addLeaveRequest,\n  getLeaveRequests,\n  updateLeaveRequestStatus,\n  updateAttendanceStatus as dbUpdateAttendanceStatus,\n  addGoal,\n  updateGoalStatus as dbUpdateGoalStatus,\n  getLeaveRequestById,\n  deleteGoal as dbDeleteGoal,\n} from '@/lib/mock-data';\nimport { USERS } from '@/lib/data/users';\nimport { generateInsightReport } from '@/ai/flows/generate-insight-report';\nimport type { LeaveRequest, AttendanceStatus, GoalStatus } from './types';\nimport { format } from 'date-fns';\n\n// --- Auth Actions ---\n\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(1, 'Password is required'),\n});\n\ntype LoginState = {\n  error?: string;\n  success?: boolean;\n  redirectTo?: string;\n};\n\nexport async function login(formData: FormData): Promise<LoginState> {\n  const result = loginSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!result.success) {\n    return { error: result.error.errors.map((e) => e.message).join(', ') };\n  }\n\n  const { email, password } = result.data;\n\n  const user = USERS.find((u) => u.email === email);\n\n  const MOCK_PASSWORDS: Record<string, string> = {\n    'sehajdeep@unicube.com': 'admin123',\n    'naitik@unicube.com': 'user123',\n    'arjun@unicube.com': 'user123',\n  }\n\n  if (!user || MOCK_PASSWORDS[user.email] !== password) {\n    return { error: 'Invalid email or password' };\n  }\n\n  await createSession(user.id);\n  \n  if (user.role === 'admin') {\n    return { success: true, redirectTo: '/dashboard'};\n  } else {\n    return { success: true, redirectTo: '/my-requests'};\n  }\n}\n\nexport async function logout() {\n  await deleteSession();\n  redirect('/');\n}\n\n// --- Leave Request Actions ---\n\nconst leaveRequestSchema = z.object({\n  startDate: z.string().min(1, 'Start date is required.'),\n  endDate: z.string().min(1, 'End date is required.'),\n  reason: z.string().min(10, 'Reason must be at least 10 characters long.').max(200, 'Reason cannot exceed 200 characters.'),\n});\n\ntype LeaveRequestState = {\n  message?: string;\n  error?: string;\n  success?: boolean;\n};\n\nexport async function submitLeaveRequest(formData: FormData): Promise<LeaveRequestState> {\n  const user = await getUser();\n  if (!user) {\n    return { error: 'You must be logged in to submit a request.' };\n  }\n\n  const result = leaveRequestSchema.safeParse({\n    startDate: formData.get('startDate'),\n    endDate: formData.get('endDate'),\n    reason: formData.get('reason'),\n  });\n\n  if (!result.success) {\n    return { error: result.error.flatten().fieldErrors.reason?.[0] || 'Invalid data provided.' };\n  }\n\n  const { startDate, endDate, reason } = result.data;\n\n  if (startDate > endDate) {\n    return { error: 'Start date cannot be after the end date.' };\n  }\n\n  try {\n    await addLeaveRequest({\n      userId: user.id,\n      userName: user.name,\n      userAvatarUrl: user.avatarUrl,\n      startDate,\n      endDate,\n      reason,\n      status: 'pending',\n    });\n\n    revalidatePath('/my-requests');\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Leave request submitted successfully!' };\n  } catch (e) {\n    return { error: 'Failed to submit leave request.' };\n  }\n}\n\nexport async function updateLeaveStatus(leaveId: string, status: 'approved' | 'rejected') {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    throw new Error('Unauthorized');\n  }\n\n  const leaveRequest = await getLeaveRequestById(leaveId);\n  if (!leaveRequest) {\n    throw new Error('Leave request not found');\n  }\n\n  await updateLeaveRequestStatus(leaveId, status);\n  \n  if (status === 'approved') {\n    // Also update attendance records to 'on_leave' for the duration\n    for (let d = new Date(leaveRequest.startDate); d <= new Date(leaveRequest.endDate); d.setDate(d.getDate() + 1)) {\n        await dbUpdateAttendanceStatus(leaveRequest.userId, format(d, 'yyyy-MM-dd'), 'on_leave');\n    }\n  }\n\n  revalidatePath('/dashboard');\n  revalidatePath('/attendance');\n  revalidatePath('/my-requests');\n}\n\n// --- Attendance Actions ---\n\ntype AttendanceState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function updateAttendanceAction(userId: string, date: string, status: AttendanceStatus): Promise<AttendanceState> {\n    const adminUser = await getUser();\n    if (!adminUser || adminUser.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        const result = await dbUpdateAttendanceStatus(userId, date, status);\n        if (result === null) {\n            return { error: 'Cannot change status for a user on approved leave.' };\n        }\n        revalidatePath('/attendance');\n        revalidatePath('/my-requests');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to update attendance.' };\n    }\n}\n\n\n// --- Goal Actions ---\n\nconst createGoalSchema = z.object({\n  userId: z.string().min(1, 'Please select an employee.'),\n  title: z.string().min(5, 'Title must be at least 5 characters long.').max(100),\n  description: z.string().min(10, 'Description must be at least 10 characters long.').max(500),\n  deadline: z.string().min(1, 'A deadline is required.'),\n});\n\ntype CreateGoalState = {\n    message?: string;\n    error?: string;\n    success?: boolean;\n};\n\nexport async function createGoalAction(formData: FormData): Promise<CreateGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    const result = createGoalSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!result.success) {\n        const errors = result.error.flatten().fieldErrors;\n        return { error: Object.values(errors).flat().join(', ') || 'Invalid data provided.' };\n    }\n\n    const { userId, title, description, deadline } = result.data;\n    const targetUser = USERS.find(u => u.id === userId);\n\n    if (!targetUser) {\n        return { error: 'Selected user not found.' };\n    }\n    \n    try {\n        await addGoal({\n            userId: targetUser.id,\n            userName: targetUser.name,\n            title,\n            description,\n            deadline,\n        });\n        revalidatePath('/goals');\n        revalidatePath('/my-requests');\n        return { success: true, message: 'Goal created successfully!' };\n    } catch (e) {\n        return { error: 'Failed to create goal.' };\n    }\n}\n\nexport async function updateGoalStatusAction(goalId: string, status: GoalStatus) {\n  const user = await getUser();\n  if (!user) {\n    throw new Error('Unauthorized');\n  }\n\n  // In a real app, you'd also check if the user owns this goal.\n  await dbUpdateGoalStatus(goalId, status);\n  revalidatePath('/my-requests');\n  revalidatePath('/goals');\n}\n\ntype DeleteGoalState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function deleteGoalAction(goalId: string): Promise<DeleteGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        await dbDeleteGoal(goalId);\n        revalidatePath('/goals');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to delete goal.' };\n    }\n}\n\n\n// --- AI Insight Action ---\n\ntype ReportState = {\n  report?: string;\n  error?: string;\n};\n\nexport async function generateReportAction(): Promise<ReportState> {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    return { error: 'Unauthorized' };\n  }\n\n  try {\n    const leaveData: LeaveRequest[] = await getLeaveRequests();\n    \n    const anonymizedData = leaveData.map(d => ({\n        startDate: d.startDate,\n        endDate: d.endDate,\n        reason: d.reason,\n        status: d.status,\n    }));\n\n    if (anonymizedData.length === 0) {\n        return { report: \"No leave request data available to generate a report.\" };\n    }\n\n    const { report } = await generateInsightReport({\n      leaveRequestData: JSON.stringify(anonymizedData),\n    });\n\n    return { report };\n  } catch (error) {\n    console.error(error);\n    return { error: 'Failed to generate insights report.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAgMsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      onOpenAutoFocus={(e) => e.preventDefault()}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,iBAAiB,CAAC,IAAM,EAAE,cAAc;gBACxC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/create-goal.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef, useTransition } from 'react';\nimport { useFormStatus } from 'react-dom';\nimport { z } from 'zod';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useForm } from 'react-hook-form';\n\nimport { createGoalAction } from '@/lib/actions';\nimport type { User } from '@/lib/types';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  DialogTrigger,\n  DialogClose,\n} from '@/components/ui/dialog';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { toast } from '@/hooks/use-toast';\nimport { PlusCircle } from 'lucide-react';\n\ntype CreateGoalProps = {\n  employees: User[];\n};\n\nconst createGoalSchema = z.object({\n  userId: z.string().min(1, 'Please select an employee.'),\n  title: z.string().min(5, 'Title must be at least 5 characters long.').max(100),\n  description: z.string().min(10, 'Description must be at least 10 characters long.').max(500),\n  deadline: z.string().min(1, 'A deadline is required.'),\n});\n\ntype CreateGoalFormValues = z.infer<typeof createGoalSchema>;\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending}>\n      {pending ? 'Creating Goal...' : 'Create Goal'}\n    </Button>\n  );\n}\n\nexport function CreateGoal({ employees }: CreateGoalProps) {\n  const [state, setState] = useState<{ message?: string, error?: string, success?: boolean } | undefined>(undefined);\n  const [isPending, startTransition] = useTransition();\n  const formRef = useRef<HTMLFormElement>(null);\n  const closeButtonRef = useRef<HTMLButtonElement>(null);\n\n  const formAction = (formData: FormData) => {\n    startTransition(async () => {\n        const result = await createGoalAction(formData);\n        setState(result);\n    });\n  }\n\n  const form = useForm<CreateGoalFormValues>({\n    resolver: zodResolver(createGoalSchema),\n    defaultValues: {\n      userId: '',\n      title: '',\n      description: '',\n      deadline: '',\n    },\n  });\n\n  useEffect(() => {\n    if (state?.success) {\n      toast({\n        title: 'Success!',\n        description: state.message,\n      });\n      form.reset();\n      closeButtonRef.current?.click();\n    }\n    if (state?.error) {\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: state.error,\n      });\n    }\n  }, [state, form]);\n\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button>\n          <PlusCircle className=\"mr-2 h-4 w-4\" />\n          Create Goal\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Create New Goal</DialogTitle>\n          <DialogDescription>\n            Assign a new goal to an employee.\n          </DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form\n            ref={formRef}\n            action={formAction}\n            onSubmit={form.handleSubmit((data) => {\n              const formData = new FormData();\n              formData.set('userId', data.userId);\n              formData.set('title', data.title);\n              formData.set('description', data.description);\n              formData.set('deadline', data.deadline);\n              formAction(formData);\n            })}\n            className=\"space-y-4\"\n          >\n            <FormField\n              control={form.control}\n              name=\"userId\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Assign To</FormLabel>\n                  <Select onValueChange={field.onChange} defaultValue={field.value}>\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select an employee\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      {employees.map((employee) => (\n                        <SelectItem key={employee.id} value={employee.id}>\n                          {employee.name}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Goal Title</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., Complete Q3 Project\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n             <FormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Description</FormLabel>\n                  <FormControl>\n                    <Textarea placeholder=\"Provide a detailed description of the goal.\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"deadline\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Deadline</FormLabel>\n                  <FormControl>\n                    <Input type=\"date\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <DialogFooter className=\"pt-4\">\n              <DialogClose asChild>\n                <Button type=\"button\" variant=\"secondary\" ref={closeButtonRef}>\n                    Cancel\n                </Button>\n              </DialogClose>\n              <SubmitButton />\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1121, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1259, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1362, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1410, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1562, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createSession, deleteSession, getUser } from '@/lib/auth';\nimport {\n  addLeaveRequest,\n  getLeaveRequests,\n  updateLeaveRequestStatus,\n  updateAttendanceStatus as dbUpdateAttendanceStatus,\n  addGoal,\n  updateGoalStatus as dbUpdateGoalStatus,\n  getLeaveRequestById,\n  deleteGoal as dbDeleteGoal,\n} from '@/lib/mock-data';\nimport { USERS } from '@/lib/data/users';\nimport { generateInsightReport } from '@/ai/flows/generate-insight-report';\nimport type { LeaveRequest, AttendanceStatus, GoalStatus } from './types';\nimport { format } from 'date-fns';\n\n// --- Auth Actions ---\n\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(1, 'Password is required'),\n});\n\ntype LoginState = {\n  error?: string;\n  success?: boolean;\n  redirectTo?: string;\n};\n\nexport async function login(formData: FormData): Promise<LoginState> {\n  const result = loginSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!result.success) {\n    return { error: result.error.errors.map((e) => e.message).join(', ') };\n  }\n\n  const { email, password } = result.data;\n\n  const user = USERS.find((u) => u.email === email);\n\n  const MOCK_PASSWORDS: Record<string, string> = {\n    'sehajdeep@unicube.com': 'admin123',\n    'naitik@unicube.com': 'user123',\n    'arjun@unicube.com': 'user123',\n  }\n\n  if (!user || MOCK_PASSWORDS[user.email] !== password) {\n    return { error: 'Invalid email or password' };\n  }\n\n  await createSession(user.id);\n  \n  if (user.role === 'admin') {\n    return { success: true, redirectTo: '/dashboard'};\n  } else {\n    return { success: true, redirectTo: '/my-requests'};\n  }\n}\n\nexport async function logout() {\n  await deleteSession();\n  redirect('/');\n}\n\n// --- Leave Request Actions ---\n\nconst leaveRequestSchema = z.object({\n  startDate: z.string().min(1, 'Start date is required.'),\n  endDate: z.string().min(1, 'End date is required.'),\n  reason: z.string().min(10, 'Reason must be at least 10 characters long.').max(200, 'Reason cannot exceed 200 characters.'),\n});\n\ntype LeaveRequestState = {\n  message?: string;\n  error?: string;\n  success?: boolean;\n};\n\nexport async function submitLeaveRequest(formData: FormData): Promise<LeaveRequestState> {\n  const user = await getUser();\n  if (!user) {\n    return { error: 'You must be logged in to submit a request.' };\n  }\n\n  const result = leaveRequestSchema.safeParse({\n    startDate: formData.get('startDate'),\n    endDate: formData.get('endDate'),\n    reason: formData.get('reason'),\n  });\n\n  if (!result.success) {\n    return { error: result.error.flatten().fieldErrors.reason?.[0] || 'Invalid data provided.' };\n  }\n\n  const { startDate, endDate, reason } = result.data;\n\n  if (startDate > endDate) {\n    return { error: 'Start date cannot be after the end date.' };\n  }\n\n  try {\n    await addLeaveRequest({\n      userId: user.id,\n      userName: user.name,\n      userAvatarUrl: user.avatarUrl,\n      startDate,\n      endDate,\n      reason,\n      status: 'pending',\n    });\n\n    revalidatePath('/my-requests');\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Leave request submitted successfully!' };\n  } catch (e) {\n    return { error: 'Failed to submit leave request.' };\n  }\n}\n\nexport async function updateLeaveStatus(leaveId: string, status: 'approved' | 'rejected') {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    throw new Error('Unauthorized');\n  }\n\n  const leaveRequest = await getLeaveRequestById(leaveId);\n  if (!leaveRequest) {\n    throw new Error('Leave request not found');\n  }\n\n  await updateLeaveRequestStatus(leaveId, status);\n  \n  if (status === 'approved') {\n    // Also update attendance records to 'on_leave' for the duration\n    for (let d = new Date(leaveRequest.startDate); d <= new Date(leaveRequest.endDate); d.setDate(d.getDate() + 1)) {\n        await dbUpdateAttendanceStatus(leaveRequest.userId, format(d, 'yyyy-MM-dd'), 'on_leave');\n    }\n  }\n\n  revalidatePath('/dashboard');\n  revalidatePath('/attendance');\n  revalidatePath('/my-requests');\n}\n\n// --- Attendance Actions ---\n\ntype AttendanceState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function updateAttendanceAction(userId: string, date: string, status: AttendanceStatus): Promise<AttendanceState> {\n    const adminUser = await getUser();\n    if (!adminUser || adminUser.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        const result = await dbUpdateAttendanceStatus(userId, date, status);\n        if (result === null) {\n            return { error: 'Cannot change status for a user on approved leave.' };\n        }\n        revalidatePath('/attendance');\n        revalidatePath('/my-requests');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to update attendance.' };\n    }\n}\n\n\n// --- Goal Actions ---\n\nconst createGoalSchema = z.object({\n  userId: z.string().min(1, 'Please select an employee.'),\n  title: z.string().min(5, 'Title must be at least 5 characters long.').max(100),\n  description: z.string().min(10, 'Description must be at least 10 characters long.').max(500),\n  deadline: z.string().min(1, 'A deadline is required.'),\n});\n\ntype CreateGoalState = {\n    message?: string;\n    error?: string;\n    success?: boolean;\n};\n\nexport async function createGoalAction(formData: FormData): Promise<CreateGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    const result = createGoalSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!result.success) {\n        const errors = result.error.flatten().fieldErrors;\n        return { error: Object.values(errors).flat().join(', ') || 'Invalid data provided.' };\n    }\n\n    const { userId, title, description, deadline } = result.data;\n    const targetUser = USERS.find(u => u.id === userId);\n\n    if (!targetUser) {\n        return { error: 'Selected user not found.' };\n    }\n    \n    try {\n        await addGoal({\n            userId: targetUser.id,\n            userName: targetUser.name,\n            title,\n            description,\n            deadline,\n        });\n        revalidatePath('/goals');\n        revalidatePath('/my-requests');\n        return { success: true, message: 'Goal created successfully!' };\n    } catch (e) {\n        return { error: 'Failed to create goal.' };\n    }\n}\n\nexport async function updateGoalStatusAction(goalId: string, status: GoalStatus) {\n  const user = await getUser();\n  if (!user) {\n    throw new Error('Unauthorized');\n  }\n\n  // In a real app, you'd also check if the user owns this goal.\n  await dbUpdateGoalStatus(goalId, status);\n  revalidatePath('/my-requests');\n  revalidatePath('/goals');\n}\n\ntype DeleteGoalState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function deleteGoalAction(goalId: string): Promise<DeleteGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        await dbDeleteGoal(goalId);\n        revalidatePath('/goals');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to delete goal.' };\n    }\n}\n\n\n// --- AI Insight Action ---\n\ntype ReportState = {\n  report?: string;\n  error?: string;\n};\n\nexport async function generateReportAction(): Promise<ReportState> {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    return { error: 'Unauthorized' };\n  }\n\n  try {\n    const leaveData: LeaveRequest[] = await getLeaveRequests();\n    \n    const anonymizedData = leaveData.map(d => ({\n        startDate: d.startDate,\n        endDate: d.endDate,\n        reason: d.reason,\n        status: d.status,\n    }));\n\n    if (anonymizedData.length === 0) {\n        return { report: \"No leave request data available to generate a report.\" };\n    }\n\n    const { report } = await generateInsightReport({\n      leaveRequestData: JSON.stringify(anonymizedData),\n    });\n\n    return { report };\n  } catch (error) {\n    console.error(error);\n    return { error: 'Failed to generate insights report.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAqPsB,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1578, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/goals-table.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useTransition } from 'react';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n} from '@/components/ui/table';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport { format, parseISO } from 'date-fns';\nimport { Target, Trash2 } from 'lucide-react';\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n    AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { Button } from '@/components/ui/button';\nimport { deleteGoalAction } from '@/lib/actions';\nimport { toast } from '@/hooks/use-toast';\n\ntype Goal = {\n  id: string;\n  userId: string;\n  userName: string;\n  title: string;\n  description: string;\n  deadline: string;\n  status: 'in_progress' | 'completed';\n  createdAt: string;\n};\n\n\ntype GoalsTableProps = {\n  data: Goal[];\n};\n\nfunction getInitials(name: string) {\n  return name.split(' ').map((n) => n[0]).join('');\n}\n\nconst statusConfig: Record<Goal['status'], { label: string; color: string }> = {\n  in_progress: { label: 'In Progress', color: 'bg-yellow-500' },\n  completed: { label: 'Completed', color: 'bg-green-500' },\n};\n\nfunction StatusBadge({ status }: { status: Goal['status'] }) {\n  const { label, color } = statusConfig[status];\n  return (\n    <Badge className={`capitalize text-white ${color}`}>\n      {label}\n    </Badge>\n  );\n}\n\nfunction DeleteGoalConfirmation({ goalId, onDeleted }: { goalId: string, onDeleted: () => void }) {\n    const [isPending, startTransition] = useTransition();\n    const [isOpen, setIsOpen] = React.useState(false);\n\n    const handleDelete = () => {\n        startTransition(async () => {\n            const result = await deleteGoalAction(goalId);\n            if (result.success) {\n                toast({ title: 'Success', description: 'Goal deleted successfully.' });\n                onDeleted();\n                setIsOpen(false);\n            } else {\n                toast({ variant: 'destructive', title: 'Error', description: result.error });\n            }\n        });\n    };\n\n    return (\n        <AlertDialog open={isOpen} onOpenChange={setIsOpen}>\n            <AlertDialogTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\">\n                    <Trash2 className=\"h-4 w-4 text-destructive\" />\n                </Button>\n            </AlertDialogTrigger>\n            <AlertDialogContent>\n                <AlertDialogHeader>\n                    <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                    <AlertDialogDescription>\n                        This action cannot be undone. This will permanently delete the goal.\n                    </AlertDialogDescription>\n                </AlertDialogHeader>\n                <AlertDialogFooter>\n                    <AlertDialogCancel>Cancel</AlertDialogCancel>\n                    <AlertDialogAction onClick={handleDelete} disabled={isPending} className=\"bg-destructive hover:bg-destructive/90\">\n                        {isPending ? 'Deleting...' : 'Delete'}\n                    </AlertDialogAction>\n                </AlertDialogFooter>\n            </AlertDialogContent>\n        </AlertDialog>\n    );\n}\n\n\nexport function GoalsTable({ data }: GoalsTableProps) {\n    const [goals, setGoals] = React.useState(data);\n\n    React.useEffect(() => {\n        setGoals(data);\n    }, [data]);\n\n    const handleGoalDeleted = (goalId: string) => {\n        setGoals(currentGoals => currentGoals.filter(g => g.id !== goalId));\n    };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>All Employee Goals</CardTitle>\n        <CardDescription>An overview of all goals assigned to employees.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"overflow-x-auto\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Employee</TableHead>\n                <TableHead>Goal Title</TableHead>\n                <TableHead className=\"hidden md:table-cell\">Deadline</TableHead>\n                <TableHead>Status</TableHead>\n                <TableHead className=\"text-right\">Actions</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {goals.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={5} className=\"text-center h-48\">\n                    <div className=\"flex flex-col items-center justify-center text-center text-muted-foreground gap-2\">\n                        <Target className=\"h-10 w-10\" />\n                        <p className=\"font-medium\">No goals found.</p>\n                        <p className=\"text-sm\">Create a new goal to get started.</p>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                goals.map((goal) => (\n                  <TableRow key={goal.id}>\n                    <TableCell>\n                      <div className=\"flex items-center gap-3\">\n                        <Avatar className=\"h-9 w-9\">\n                          <AvatarFallback>{getInitials(goal.userName)}</AvatarFallback>\n                        </Avatar>\n                        <span className=\"font-medium\">{goal.userName}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <p className=\"font-medium\">{goal.title}</p>\n                      <p className=\"text-sm text-muted-foreground hidden lg:block max-w-xs truncate\">{goal.description}</p>\n                    </TableCell>\n                    <TableCell className=\"hidden md:table-cell\">\n                      {format(parseISO(goal.deadline), 'MMM d, yyyy')}\n                    </TableCell>\n                    <TableCell>\n                      <StatusBadge status={goal.status} />\n                    </TableCell>\n                    <TableCell className=\"text-right\">\n                        <DeleteGoalConfirmation goalId={goal.id} onDeleted={() => handleGoalDeleted(goal.id)} />\n                    </TableCell>\n                  </TableRow>\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}