{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 382, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;;AACA,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,6LAAC,yMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;;AACA,eAAe,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createSession, deleteSession, getUser } from '@/lib/auth';\nimport {\n  addLeaveRequest,\n  getLeaveRequests,\n  updateLeaveRequestStatus,\n  updateAttendanceStatus as dbUpdateAttendanceStatus,\n  addGoal,\n  updateGoalStatus as dbUpdateGoalStatus,\n  getLeaveRequestById,\n  deleteGoal as dbDeleteGoal,\n} from '@/lib/mock-data';\nimport { USERS } from '@/lib/data/users';\nimport { generateInsightReport } from '@/ai/flows/generate-insight-report';\nimport type { LeaveRequest, AttendanceStatus, GoalStatus } from './types';\nimport { format } from 'date-fns';\n\n// --- Auth Actions ---\n\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(1, 'Password is required'),\n});\n\ntype LoginState = {\n  error?: string;\n  success?: boolean;\n  redirectTo?: string;\n};\n\nexport async function login(formData: FormData): Promise<LoginState> {\n  const result = loginSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!result.success) {\n    return { error: result.error.errors.map((e) => e.message).join(', ') };\n  }\n\n  const { email, password } = result.data;\n\n  const user = USERS.find((u) => u.email === email);\n\n  const MOCK_PASSWORDS: Record<string, string> = {\n    'sehajdeep@unicube.com': 'admin123',\n    'naitik@unicube.com': 'user123',\n    'arjun@unicube.com': 'user123',\n  }\n\n  if (!user || MOCK_PASSWORDS[user.email] !== password) {\n    return { error: 'Invalid email or password' };\n  }\n\n  await createSession(user.id);\n  \n  if (user.role === 'admin') {\n    return { success: true, redirectTo: '/dashboard'};\n  } else {\n    return { success: true, redirectTo: '/my-requests'};\n  }\n}\n\nexport async function logout() {\n  await deleteSession();\n  redirect('/');\n}\n\n// --- Leave Request Actions ---\n\nconst leaveRequestSchema = z.object({\n  startDate: z.string().min(1, 'Start date is required.'),\n  endDate: z.string().min(1, 'End date is required.'),\n  reason: z.string().min(10, 'Reason must be at least 10 characters long.').max(200, 'Reason cannot exceed 200 characters.'),\n});\n\ntype LeaveRequestState = {\n  message?: string;\n  error?: string;\n  success?: boolean;\n};\n\nexport async function submitLeaveRequest(formData: FormData): Promise<LeaveRequestState> {\n  const user = await getUser();\n  if (!user) {\n    return { error: 'You must be logged in to submit a request.' };\n  }\n\n  const result = leaveRequestSchema.safeParse({\n    startDate: formData.get('startDate'),\n    endDate: formData.get('endDate'),\n    reason: formData.get('reason'),\n  });\n\n  if (!result.success) {\n    return { error: result.error.flatten().fieldErrors.reason?.[0] || 'Invalid data provided.' };\n  }\n\n  const { startDate, endDate, reason } = result.data;\n\n  if (startDate > endDate) {\n    return { error: 'Start date cannot be after the end date.' };\n  }\n\n  try {\n    await addLeaveRequest({\n      userId: user.id,\n      userName: user.name,\n      userAvatarUrl: user.avatarUrl,\n      startDate,\n      endDate,\n      reason,\n      status: 'pending',\n    });\n\n    revalidatePath('/my-requests');\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Leave request submitted successfully!' };\n  } catch (e) {\n    return { error: 'Failed to submit leave request.' };\n  }\n}\n\nexport async function updateLeaveStatus(leaveId: string, status: 'approved' | 'rejected') {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    throw new Error('Unauthorized');\n  }\n\n  const leaveRequest = await getLeaveRequestById(leaveId);\n  if (!leaveRequest) {\n    throw new Error('Leave request not found');\n  }\n\n  await updateLeaveRequestStatus(leaveId, status);\n  \n  if (status === 'approved') {\n    // Also update attendance records to 'on_leave' for the duration\n    for (let d = new Date(leaveRequest.startDate); d <= new Date(leaveRequest.endDate); d.setDate(d.getDate() + 1)) {\n        await dbUpdateAttendanceStatus(leaveRequest.userId, format(d, 'yyyy-MM-dd'), 'on_leave');\n    }\n  }\n\n  revalidatePath('/dashboard');\n  revalidatePath('/attendance');\n  revalidatePath('/my-requests');\n}\n\n// --- Attendance Actions ---\n\ntype AttendanceState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function updateAttendanceAction(userId: string, date: string, status: AttendanceStatus): Promise<AttendanceState> {\n    const adminUser = await getUser();\n    if (!adminUser || adminUser.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        const result = await dbUpdateAttendanceStatus(userId, date, status);\n        if (result === null) {\n            return { error: 'Cannot change status for a user on approved leave.' };\n        }\n        revalidatePath('/attendance');\n        revalidatePath('/my-requests');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to update attendance.' };\n    }\n}\n\n\n// --- Goal Actions ---\n\nconst createGoalSchema = z.object({\n  userId: z.string().min(1, 'Please select an employee.'),\n  title: z.string().min(5, 'Title must be at least 5 characters long.').max(100),\n  description: z.string().min(10, 'Description must be at least 10 characters long.').max(500),\n  deadline: z.string().min(1, 'A deadline is required.'),\n});\n\ntype CreateGoalState = {\n    message?: string;\n    error?: string;\n    success?: boolean;\n};\n\nexport async function createGoalAction(formData: FormData): Promise<CreateGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    const result = createGoalSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!result.success) {\n        const errors = result.error.flatten().fieldErrors;\n        return { error: Object.values(errors).flat().join(', ') || 'Invalid data provided.' };\n    }\n\n    const { userId, title, description, deadline } = result.data;\n    const targetUser = USERS.find(u => u.id === userId);\n\n    if (!targetUser) {\n        return { error: 'Selected user not found.' };\n    }\n    \n    try {\n        await addGoal({\n            userId: targetUser.id,\n            userName: targetUser.name,\n            title,\n            description,\n            deadline,\n        });\n        revalidatePath('/goals');\n        revalidatePath('/my-requests');\n        return { success: true, message: 'Goal created successfully!' };\n    } catch (e) {\n        return { error: 'Failed to create goal.' };\n    }\n}\n\nexport async function updateGoalStatusAction(goalId: string, status: GoalStatus) {\n  const user = await getUser();\n  if (!user) {\n    throw new Error('Unauthorized');\n  }\n\n  // In a real app, you'd also check if the user owns this goal.\n  await dbUpdateGoalStatus(goalId, status);\n  revalidatePath('/my-requests');\n  revalidatePath('/goals');\n}\n\ntype DeleteGoalState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function deleteGoalAction(goalId: string): Promise<DeleteGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        await dbDeleteGoal(goalId);\n        revalidatePath('/goals');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to delete goal.' };\n    }\n}\n\n\n// --- AI Insight Action ---\n\ntype ReportState = {\n  report?: string;\n  error?: string;\n};\n\nexport async function generateReportAction(): Promise<ReportState> {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    return { error: 'Unauthorized' };\n  }\n\n  try {\n    const leaveData: LeaveRequest[] = await getLeaveRequests();\n    \n    const anonymizedData = leaveData.map(d => ({\n        startDate: d.startDate,\n        endDate: d.endDate,\n        reason: d.reason,\n        status: d.status,\n    }));\n\n    if (anonymizedData.length === 0) {\n        return { report: \"No leave request data available to generate a report.\" };\n    }\n\n    const { report } = await generateInsightReport({\n      leaveRequestData: JSON.stringify(anonymizedData),\n    });\n\n    return { report };\n  } catch (error) {\n    console.error(error);\n    return { error: 'Failed to generate insights report.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA6JsB,yBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { redirect } from 'next/navigation';\nimport { revalidatePath } from 'next/cache';\n\nimport { createSession, deleteSession, getUser } from '@/lib/auth';\nimport {\n  addLeaveRequest,\n  getLeaveRequests,\n  updateLeaveRequestStatus,\n  updateAttendanceStatus as dbUpdateAttendanceStatus,\n  addGoal,\n  updateGoalStatus as dbUpdateGoalStatus,\n  getLeaveRequestById,\n  deleteGoal as dbDeleteGoal,\n} from '@/lib/mock-data';\nimport { USERS } from '@/lib/data/users';\nimport { generateInsightReport } from '@/ai/flows/generate-insight-report';\nimport type { LeaveRequest, AttendanceStatus, GoalStatus } from './types';\nimport { format } from 'date-fns';\n\n// --- Auth Actions ---\n\nconst loginSchema = z.object({\n  email: z.string().email('Invalid email address'),\n  password: z.string().min(1, 'Password is required'),\n});\n\ntype LoginState = {\n  error?: string;\n  success?: boolean;\n  redirectTo?: string;\n};\n\nexport async function login(formData: FormData): Promise<LoginState> {\n  const result = loginSchema.safeParse(Object.fromEntries(formData.entries()));\n\n  if (!result.success) {\n    return { error: result.error.errors.map((e) => e.message).join(', ') };\n  }\n\n  const { email, password } = result.data;\n\n  const user = USERS.find((u) => u.email === email);\n\n  const MOCK_PASSWORDS: Record<string, string> = {\n    'sehajdeep@unicube.com': 'admin123',\n    'naitik@unicube.com': 'user123',\n    'arjun@unicube.com': 'user123',\n  }\n\n  if (!user || MOCK_PASSWORDS[user.email] !== password) {\n    return { error: 'Invalid email or password' };\n  }\n\n  await createSession(user.id);\n  \n  if (user.role === 'admin') {\n    return { success: true, redirectTo: '/dashboard'};\n  } else {\n    return { success: true, redirectTo: '/my-requests'};\n  }\n}\n\nexport async function logout() {\n  await deleteSession();\n  redirect('/');\n}\n\n// --- Leave Request Actions ---\n\nconst leaveRequestSchema = z.object({\n  startDate: z.string().min(1, 'Start date is required.'),\n  endDate: z.string().min(1, 'End date is required.'),\n  reason: z.string().min(10, 'Reason must be at least 10 characters long.').max(200, 'Reason cannot exceed 200 characters.'),\n});\n\ntype LeaveRequestState = {\n  message?: string;\n  error?: string;\n  success?: boolean;\n};\n\nexport async function submitLeaveRequest(formData: FormData): Promise<LeaveRequestState> {\n  const user = await getUser();\n  if (!user) {\n    return { error: 'You must be logged in to submit a request.' };\n  }\n\n  const result = leaveRequestSchema.safeParse({\n    startDate: formData.get('startDate'),\n    endDate: formData.get('endDate'),\n    reason: formData.get('reason'),\n  });\n\n  if (!result.success) {\n    return { error: result.error.flatten().fieldErrors.reason?.[0] || 'Invalid data provided.' };\n  }\n\n  const { startDate, endDate, reason } = result.data;\n\n  if (startDate > endDate) {\n    return { error: 'Start date cannot be after the end date.' };\n  }\n\n  try {\n    await addLeaveRequest({\n      userId: user.id,\n      userName: user.name,\n      userAvatarUrl: user.avatarUrl,\n      startDate,\n      endDate,\n      reason,\n      status: 'pending',\n    });\n\n    revalidatePath('/my-requests');\n    revalidatePath('/dashboard');\n    return { success: true, message: 'Leave request submitted successfully!' };\n  } catch (e) {\n    return { error: 'Failed to submit leave request.' };\n  }\n}\n\nexport async function updateLeaveStatus(leaveId: string, status: 'approved' | 'rejected') {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    throw new Error('Unauthorized');\n  }\n\n  const leaveRequest = await getLeaveRequestById(leaveId);\n  if (!leaveRequest) {\n    throw new Error('Leave request not found');\n  }\n\n  await updateLeaveRequestStatus(leaveId, status);\n  \n  if (status === 'approved') {\n    // Also update attendance records to 'on_leave' for the duration\n    for (let d = new Date(leaveRequest.startDate); d <= new Date(leaveRequest.endDate); d.setDate(d.getDate() + 1)) {\n        await dbUpdateAttendanceStatus(leaveRequest.userId, format(d, 'yyyy-MM-dd'), 'on_leave');\n    }\n  }\n\n  revalidatePath('/dashboard');\n  revalidatePath('/attendance');\n  revalidatePath('/my-requests');\n}\n\n// --- Attendance Actions ---\n\ntype AttendanceState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function updateAttendanceAction(userId: string, date: string, status: AttendanceStatus): Promise<AttendanceState> {\n    const adminUser = await getUser();\n    if (!adminUser || adminUser.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        const result = await dbUpdateAttendanceStatus(userId, date, status);\n        if (result === null) {\n            return { error: 'Cannot change status for a user on approved leave.' };\n        }\n        revalidatePath('/attendance');\n        revalidatePath('/my-requests');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to update attendance.' };\n    }\n}\n\n\n// --- Goal Actions ---\n\nconst createGoalSchema = z.object({\n  userId: z.string().min(1, 'Please select an employee.'),\n  title: z.string().min(5, 'Title must be at least 5 characters long.').max(100),\n  description: z.string().min(10, 'Description must be at least 10 characters long.').max(500),\n  deadline: z.string().min(1, 'A deadline is required.'),\n});\n\ntype CreateGoalState = {\n    message?: string;\n    error?: string;\n    success?: boolean;\n};\n\nexport async function createGoalAction(formData: FormData): Promise<CreateGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    const result = createGoalSchema.safeParse(Object.fromEntries(formData.entries()));\n\n    if (!result.success) {\n        const errors = result.error.flatten().fieldErrors;\n        return { error: Object.values(errors).flat().join(', ') || 'Invalid data provided.' };\n    }\n\n    const { userId, title, description, deadline } = result.data;\n    const targetUser = USERS.find(u => u.id === userId);\n\n    if (!targetUser) {\n        return { error: 'Selected user not found.' };\n    }\n    \n    try {\n        await addGoal({\n            userId: targetUser.id,\n            userName: targetUser.name,\n            title,\n            description,\n            deadline,\n        });\n        revalidatePath('/goals');\n        revalidatePath('/my-requests');\n        return { success: true, message: 'Goal created successfully!' };\n    } catch (e) {\n        return { error: 'Failed to create goal.' };\n    }\n}\n\nexport async function updateGoalStatusAction(goalId: string, status: GoalStatus) {\n  const user = await getUser();\n  if (!user) {\n    throw new Error('Unauthorized');\n  }\n\n  // In a real app, you'd also check if the user owns this goal.\n  await dbUpdateGoalStatus(goalId, status);\n  revalidatePath('/my-requests');\n  revalidatePath('/goals');\n}\n\ntype DeleteGoalState = {\n    error?: string;\n    success?: boolean;\n};\n\nexport async function deleteGoalAction(goalId: string): Promise<DeleteGoalState> {\n    const user = await getUser();\n    if (!user || user.role !== 'admin') {\n        return { error: 'Unauthorized' };\n    }\n\n    try {\n        await dbDeleteGoal(goalId);\n        revalidatePath('/goals');\n        return { success: true };\n    } catch (e) {\n        return { error: 'Failed to delete goal.' };\n    }\n}\n\n\n// --- AI Insight Action ---\n\ntype ReportState = {\n  report?: string;\n  error?: string;\n};\n\nexport async function generateReportAction(): Promise<ReportState> {\n  const user = await getUser();\n  if (!user || user.role !== 'admin') {\n    return { error: 'Unauthorized' };\n  }\n\n  try {\n    const leaveData: LeaveRequest[] = await getLeaveRequests();\n    \n    const anonymizedData = leaveData.map(d => ({\n        startDate: d.startDate,\n        endDate: d.endDate,\n        reason: d.reason,\n        status: d.status,\n    }));\n\n    if (anonymizedData.length === 0) {\n        return { report: \"No leave request data available to generate a report.\" };\n    }\n\n    const { report } = await generateInsightReport({\n      leaveRequestData: JSON.stringify(anonymizedData),\n    });\n\n    return { report };\n  } catch (error) {\n    console.error(error);\n    return { error: 'Failed to generate insights report.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IA6HsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 723, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/attendance-table.tsx"],"sourcesContent":["\n\"use client\";\n\nimport * as React from 'react';\nimport { useTransition } from 'react';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableCell,\n} from '@/components/ui/table';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Label } from \"@/components/ui/label\"\nimport type { User, Attendance, LeaveRequest } from '@/lib/types';\nimport { updateAttendanceAction, updateLeaveStatus } from '@/lib/actions';\nimport { toast } from '@/hooks/use-toast';\nimport { Plane, XCircle, Clock, CheckCircle } from 'lucide-react';\nimport { Button } from '../ui/button';\nimport {\n    AlertDialog,\n    AlertDialogAction,\n    AlertDialogCancel,\n    AlertDialogContent,\n    AlertDialogDescription,\n    AlertDialogFooter,\n    AlertDialogHeader,\n    AlertDialogTitle,\n    AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { Badge } from '../ui/badge';\n\ntype AttendanceTableProps = {\n  employees: (User & { attendance: Attendance[], leaveRequests: LeaveRequest[] })[];\n  selectedDate: string; // yyyy-MM-dd\n};\n\nfunction getInitials(name: string) {\n  return name.split(' ').map((n) => n[0]).join('');\n}\n\n\nfunction AttendanceControl({ userId, date, currentStatus, leaveRequest }: { userId: string, date: string, currentStatus: Attendance['status'], leaveRequest?: LeaveRequest }) {\n  const [isPending, startTransition] = useTransition();\n  const [optimisticStatus, setOptimisticStatus] = React.useState(currentStatus);\n\n  React.useEffect(() => {\n    setOptimisticStatus(currentStatus);\n  }, [currentStatus, date]);\n\n  const handleStatusChange = (newStatus: Attendance['status']) => {\n    const previousStatus = optimisticStatus;\n    setOptimisticStatus(newStatus);\n\n    startTransition(async () => {\n      try {\n        const result = await updateAttendanceAction(userId, date, newStatus);\n        if (result?.error) {\n            toast({\n              variant: 'destructive',\n              title: 'Error',\n              description: result.error,\n            });\n            setOptimisticStatus(previousStatus);\n        } else {\n            toast({\n              title: 'Success',\n              description: `Attendance updated to ${newStatus}.`,\n            });\n        }\n      } catch (error) {\n        toast({\n          variant: 'destructive',\n          title: 'Error',\n          description: 'Failed to update attendance.',\n        });\n        setOptimisticStatus(previousStatus);\n      }\n    });\n  }\n  \n  const handleLeaveAction = (status: 'approved' | 'rejected') => {\n    if (!leaveRequest) return;\n    startTransition(async () => {\n      try {\n        await updateLeaveStatus(leaveRequest.id, status);\n        toast({\n          title: 'Success',\n          description: `Request has been ${status}.`,\n        });\n      } catch (error) {\n        toast({\n          variant: 'destructive',\n          title: 'Error',\n          description: 'Failed to update request status.',\n        });\n      }\n    });\n  };\n\n  const handleCancelLeave = () => {\n    if (!leaveRequest) return;\n    startTransition(async () => {\n        try {\n            await updateLeaveStatus(leaveRequest.id, 'rejected');\n            toast({\n                title: 'Leave Cancelled',\n                description: `The leave for ${leaveRequest.userName} has been cancelled.`,\n            });\n        } catch (error) {\n            toast({\n                variant: 'destructive',\n                title: 'Error',\n                description: 'Failed to cancel leave request.',\n            });\n        }\n    });\n  };\n  \n  if (leaveRequest) {\n    switch (leaveRequest.status) {\n      case 'approved':\n        return (\n          <div className=\"flex items-center justify-end gap-2 text-orange-500 font-medium\">\n            <Plane className=\"h-4 w-4\" />\n            <span>On Leave</span>\n            <AlertDialog>\n                <AlertDialogTrigger asChild>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 text-muted-foreground hover:text-destructive\" disabled={isPending}>\n                        <XCircle className=\"h-4 w-4\" />\n                    </Button>\n                </AlertDialogTrigger>\n                <AlertDialogContent>\n                    <AlertDialogHeader>\n                        <AlertDialogTitle>Cancel Approved Leave?</AlertDialogTitle>\n                        <AlertDialogDescription>\n                            This will cancel the approved leave for {leaveRequest.userName}. The employee will be marked as absent for this period unless updated. This action cannot be undone.\n                        </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                        <AlertDialogCancel>Back</AlertDialogCancel>\n                        <AlertDialogAction onClick={handleCancelLeave} disabled={isPending} className=\"bg-destructive hover:bg-destructive/90\">\n                            {isPending ? 'Cancelling...' : 'Yes, Cancel Leave'}\n                        </AlertDialogAction>\n                    </AlertDialogFooter>\n                </AlertDialogContent>\n            </AlertDialog>\n          </div>\n        );\n      case 'pending':\n        return (\n          <div className=\"flex items-center justify-end gap-2\">\n            <Badge variant=\"secondary\" className=\"bg-yellow-500/20 text-yellow-700 border-yellow-500/30\">\n                <Clock className=\"h-3 w-3 mr-1\"/> Pending Leave\n            </Badge>\n            <Button size=\"sm\" variant=\"outline\" className=\"h-7 border-green-500 text-green-500 hover:bg-green-500 hover:text-white\" onClick={() => handleLeaveAction('approved')} disabled={isPending}>Approve</Button>\n            <Button size=\"sm\" variant=\"outline\" className=\"h-7 border-red-500 text-red-500 hover:bg-red-500 hover:text-white\" onClick={() => handleLeaveAction('rejected')} disabled={isPending}>Reject</Button>\n          </div>\n        );\n      case 'rejected':\n         return (\n          <div className=\"flex items-center justify-end gap-2\">\n            <Badge variant=\"secondary\" className=\"bg-red-500/20 text-red-700 border-red-500/30\">\n                <XCircle className=\"h-3 w-3 mr-1\"/> Rejected Leave\n            </Badge>\n            <Button size=\"sm\" variant=\"outline\" className=\"h-7 border-green-500 text-green-500 hover:bg-green-500 hover:text-white\" onClick={() => handleLeaveAction('approved')} disabled={isPending}>Approve</Button>\n          </div>\n        );\n    }\n  }\n\n\n  return (\n    <RadioGroup\n      value={optimisticStatus}\n      onValueChange={(value: Attendance['status']) => handleStatusChange(value)}\n      className=\"flex justify-end gap-4\"\n      disabled={isPending}\n    >\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"present\" id={`present-${userId}`} />\n        <Label htmlFor={`present-${userId}`}>Present</Label>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <RadioGroupItem value=\"absent\" id={`absent-${userId}`} />\n        <Label htmlFor={`absent-${userId}`}>Absent</Label>\n      </div>\n    </RadioGroup>\n  );\n}\n\n\nexport function AttendanceTable({ employees, selectedDate }: AttendanceTableProps) {\n  \n  return (\n    <div className=\"overflow-x-auto\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Employee</TableHead>\n            <TableHead className=\"text-right\">Status</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {employees.length === 0 ? (\n            <TableRow>\n              <TableCell colSpan={2} className=\"text-center\">\n                No employees found.\n              </TableCell>\n            </TableRow>\n          ) : (\n            employees.map((user) => {\n              const attendanceForDate = user.attendance.find(a => a.date === selectedDate);\n              \n              let leaveRequestForDate: LeaveRequest | undefined;\n              leaveRequestForDate = user.leaveRequests.find(req => {\n                  return selectedDate >= req.startDate && selectedDate <= req.endDate;\n              });\n\n              const status = attendanceForDate?.status || 'present';\n              \n              return (\n                <TableRow key={user.id}>\n                  <TableCell>\n                    <div className=\"flex items-center gap-3\">\n                      <Avatar className=\"h-9 w-9\">\n                        <AvatarImage src={user.avatarUrl} alt={user.name} />\n                        <AvatarFallback>{getInitials(user.name)}</AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <p className=\"font-medium\">{user.name}</p>\n                        <p className=\"text-sm text-muted-foreground\">{user.email}</p>\n                      </div>\n                    </div>\n                  </TableCell>\n                  <TableCell className=\"text-right\">\n                    <AttendanceControl userId={user.id} date={selectedDate} currentStatus={status} leaveRequest={leaveRequestForDate} />\n                  </TableCell>\n                </TableRow>\n              );\n            })\n          )}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1291, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/attendance-manager.tsx"],"sourcesContent":["\n'use client';\n\nimport * as React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { Calendar as CalendarIcon } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { cn } from '@/lib/utils';\nimport type { User, Attendance, LeaveRequest } from '@/lib/types';\nimport { AttendanceTable } from './attendance-table';\nimport { Skeleton } from '../ui/skeleton';\n\ntype AttendanceManagerProps = {\n  employees: (User & { attendance: Attendance[], leaveRequests: LeaveRequest[] })[];\n};\n\nfunction AttendanceTableSkeleton() {\n  return (\n    <div className=\"space-y-4\">\n      {[...Array(3)].map((_, i) => (\n        <div key={i} className=\"flex items-center justify-between p-2\">\n          <div className=\"flex items-center gap-3\">\n            <Skeleton className=\"h-9 w-9 rounded-full\" />\n            <div className=\"space-y-1\">\n              <Skeleton className=\"h-4 w-24\" />\n              <Skeleton className=\"h-3 w-32\" />\n            </div>\n          </div>\n          <div className=\"flex gap-4\">\n            <Skeleton className=\"h-5 w-16\" />\n            <Skeleton className=\"h-5 w-16\" />\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport function AttendanceManager({ employees }: AttendanceManagerProps) {\n  const [selectedDate, setSelectedDate] = React.useState<Date | undefined>();\n  const [isClient, setIsClient] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsClient(true);\n    setSelectedDate(new Date());\n  }, []);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Daily Attendance</CardTitle>\n        <CardDescription>Select a date to view and manage employee attendance.</CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"flex items-center gap-4\">\n            <p className=\"text-sm font-medium\">Selected Date:</p>\n            <Popover>\n            <PopoverTrigger asChild>\n                <Button\n                variant={'outline'}\n                className={cn(\n                    'w-[240px] justify-start text-left font-normal',\n                    !selectedDate && 'text-muted-foreground'\n                )}\n                >\n                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                {selectedDate ? format(selectedDate, 'PPP') : <span>Pick a date</span>}\n                </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                <Calendar\n                mode=\"single\"\n                selected={selectedDate}\n                onSelect={(d) => setSelectedDate(d || new Date())}\n                initialFocus\n                />\n            </PopoverContent>\n            </Popover>\n        </div>\n\n        {isClient && selectedDate ? <AttendanceTable employees={employees} selectedDate={format(selectedDate, 'yyyy-MM-dd')} /> : <AttendanceTableSkeleton />}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAZA;;;;;;;;;;;AAkBA,SAAS;IACP,qBACE,6LAAC;QAAI,WAAU;kBACZ;eAAI,MAAM;SAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,6LAAC;gBAAY,WAAU;;kCACrB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,uIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;kDACpB,6LAAC,uIAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;;;;;;;;;;;;;kCAGxB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC,uIAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;;;;;;;;eAVd;;;;;;;;;;AAgBlB;KApBS;AAsBF,SAAS,kBAAkB,EAAE,SAAS,EAA0B;;IACrE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAE;IAE/C,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;uCAAE;YACd,YAAY;YACZ,gBAAgB,IAAI;QACtB;sCAAG,EAAE;IAEL,qBACE,6LAAC,mIAAA,CAAA,OAAI;;0BACH,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC,mIAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,6LAAC,mIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAEnB,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAE,WAAU;0CAAsB;;;;;;0CACnC,6LAAC,sIAAA,CAAA,UAAO;;kDACR,6LAAC,sIAAA,CAAA,iBAAc;wCAAC,OAAO;kDACnB,cAAA,6LAAC,qIAAA,CAAA,SAAM;4CACP,SAAS;4CACT,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACR,iDACA,CAAC,gBAAgB;;8DAGrB,6LAAC,6MAAA,CAAA,WAAY;oDAAC,WAAU;;;;;;gDACvB,eAAe,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc,uBAAS,6LAAC;8DAAK;;;;;;;;;;;;;;;;;kDAGxD,6LAAC,sIAAA,CAAA,iBAAc;wCAAC,WAAU;wCAAa,OAAM;kDACzC,cAAA,6LAAC,uIAAA,CAAA,WAAQ;4CACT,MAAK;4CACL,UAAU;4CACV,UAAU,CAAC,IAAM,gBAAgB,KAAK,IAAI;4CAC1C,YAAY;;;;;;;;;;;;;;;;;;;;;;;oBAMnB,YAAY,6BAAe,6LAAC,yJAAA,CAAA,kBAAe;wBAAC,WAAW;wBAAW,cAAc,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,cAAc;;;;;6CAAoB,6LAAC;;;;;;;;;;;;;;;;;AAInI;GA9CgB;MAAA","debugId":null}}]
}